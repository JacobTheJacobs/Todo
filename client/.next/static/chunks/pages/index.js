/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["pages/index"],{

/***/ "./node_modules/classnames/index.js":
/*!******************************************!*\
  !*** ./node_modules/classnames/index.js ***!
  \******************************************/
/***/ (function(module, exports, __webpack_require__) {

eval(__webpack_require__.ts("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\r\n  Copyright (c) 2018 Jed Watson.\r\n  Licensed under the MIT License (MIT), see\r\n  http://jedwatson.github.io/classnames\r\n*/\r\n/* global define */\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\tvar hasOwn = {}.hasOwnProperty;\r\n\r\n\tfunction classNames() {\r\n\t\tvar classes = [];\r\n\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tvar arg = arguments[i];\r\n\t\t\tif (!arg) continue;\r\n\r\n\t\t\tvar argType = typeof arg;\r\n\r\n\t\t\tif (argType === 'string' || argType === 'number') {\r\n\t\t\t\tclasses.push(arg);\r\n\t\t\t} else if (Array.isArray(arg)) {\r\n\t\t\t\tif (arg.length) {\r\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\r\n\t\t\t\t\tif (inner) {\r\n\t\t\t\t\t\tclasses.push(inner);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (argType === 'object') {\r\n\t\t\t\tif (arg.toString === Object.prototype.toString) {\r\n\t\t\t\t\tfor (var key in arg) {\r\n\t\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\r\n\t\t\t\t\t\t\tclasses.push(key);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tclasses.push(arg.toString());\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn classes.join(' ');\r\n\t}\r\n\r\n\tif ( true && module.exports) {\r\n\t\tclassNames.default = classNames;\r\n\t\tmodule.exports = classNames;\r\n\t} else if (true) {\r\n\t\t// register as 'classnames', consistent with npm package name\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function () {\r\n\t\t\treturn classNames;\r\n\t\t}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\r\n\t} else {}\r\n}());\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQjtBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixzQkFBc0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSyxLQUE2QjtBQUNsQztBQUNBO0FBQ0EsR0FBRyxTQUFTLElBQTRFO0FBQ3hGO0FBQ0EsRUFBRSxpQ0FBcUIsRUFBRSxtQ0FBRTtBQUMzQjtBQUNBLEdBQUc7QUFBQSxrR0FBQztBQUNKLEdBQUcsS0FBSyxFQUVOO0FBQ0YsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvY2xhc3NuYW1lcy9pbmRleC5qcz83ZDUwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIVxyXG4gIENvcHlyaWdodCAoYykgMjAxOCBKZWQgV2F0c29uLlxyXG4gIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZSAoTUlUKSwgc2VlXHJcbiAgaHR0cDovL2plZHdhdHNvbi5naXRodWIuaW8vY2xhc3NuYW1lc1xyXG4qL1xyXG4vKiBnbG9iYWwgZGVmaW5lICovXHJcblxyXG4oZnVuY3Rpb24gKCkge1xyXG5cdCd1c2Ugc3RyaWN0JztcclxuXHJcblx0dmFyIGhhc093biA9IHt9Lmhhc093blByb3BlcnR5O1xyXG5cclxuXHRmdW5jdGlvbiBjbGFzc05hbWVzKCkge1xyXG5cdFx0dmFyIGNsYXNzZXMgPSBbXTtcclxuXHJcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgYXJnID0gYXJndW1lbnRzW2ldO1xyXG5cdFx0XHRpZiAoIWFyZykgY29udGludWU7XHJcblxyXG5cdFx0XHR2YXIgYXJnVHlwZSA9IHR5cGVvZiBhcmc7XHJcblxyXG5cdFx0XHRpZiAoYXJnVHlwZSA9PT0gJ3N0cmluZycgfHwgYXJnVHlwZSA9PT0gJ251bWJlcicpIHtcclxuXHRcdFx0XHRjbGFzc2VzLnB1c2goYXJnKTtcclxuXHRcdFx0fSBlbHNlIGlmIChBcnJheS5pc0FycmF5KGFyZykpIHtcclxuXHRcdFx0XHRpZiAoYXJnLmxlbmd0aCkge1xyXG5cdFx0XHRcdFx0dmFyIGlubmVyID0gY2xhc3NOYW1lcy5hcHBseShudWxsLCBhcmcpO1xyXG5cdFx0XHRcdFx0aWYgKGlubmVyKSB7XHJcblx0XHRcdFx0XHRcdGNsYXNzZXMucHVzaChpbm5lcik7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9IGVsc2UgaWYgKGFyZ1R5cGUgPT09ICdvYmplY3QnKSB7XHJcblx0XHRcdFx0aWYgKGFyZy50b1N0cmluZyA9PT0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZykge1xyXG5cdFx0XHRcdFx0Zm9yICh2YXIga2V5IGluIGFyZykge1xyXG5cdFx0XHRcdFx0XHRpZiAoaGFzT3duLmNhbGwoYXJnLCBrZXkpICYmIGFyZ1trZXldKSB7XHJcblx0XHRcdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGtleSk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9IGVsc2Uge1xyXG5cdFx0XHRcdFx0Y2xhc3Nlcy5wdXNoKGFyZy50b1N0cmluZygpKTtcclxuXHRcdFx0XHR9XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHJcblx0XHRyZXR1cm4gY2xhc3Nlcy5qb2luKCcgJyk7XHJcblx0fVxyXG5cclxuXHRpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcclxuXHRcdGNsYXNzTmFtZXMuZGVmYXVsdCA9IGNsYXNzTmFtZXM7XHJcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGNsYXNzTmFtZXM7XHJcblx0fSBlbHNlIGlmICh0eXBlb2YgZGVmaW5lID09PSAnZnVuY3Rpb24nICYmIHR5cGVvZiBkZWZpbmUuYW1kID09PSAnb2JqZWN0JyAmJiBkZWZpbmUuYW1kKSB7XHJcblx0XHQvLyByZWdpc3RlciBhcyAnY2xhc3NuYW1lcycsIGNvbnNpc3RlbnQgd2l0aCBucG0gcGFja2FnZSBuYW1lXHJcblx0XHRkZWZpbmUoJ2NsYXNzbmFtZXMnLCBbXSwgZnVuY3Rpb24gKCkge1xyXG5cdFx0XHRyZXR1cm4gY2xhc3NOYW1lcztcclxuXHRcdH0pO1xyXG5cdH0gZWxzZSB7XHJcblx0XHR3aW5kb3cuY2xhc3NOYW1lcyA9IGNsYXNzTmFtZXM7XHJcblx0fVxyXG59KCkpO1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/classnames/index.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css":
/*!************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css ***!
  \************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// Imports\nvar ___CSS_LOADER_API_IMPORT___ = __webpack_require__(/*! ../node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\");\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(true);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".Todo_container__z5Pr_{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin-top: 20px;\\r\\n  -webkit-padding-end: 40px;\\r\\n          padding-inline-end: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.Todo_input__V0Et7 {\\r\\n\\tflex-grow: 1;\\r\\n\\toutline: none;\\r\\n\\tborder: 1px solid #cb7cef;\\r\\n\\tborder-top-left-radius: 5px;\\r\\n\\tborder-bottom-left-radius: 5px;\\r\\n\\tfont-size: 16px;\\r\\n\\tpadding-left: 5px;\\r\\n\\tbox-shadow: 0px 2px 35px 6px rgba(203, 124, 239, 0.3);\\r\\n}\\r\\n\\r\\n.Todo_submit_btn__Dof7d {\\r\\n\\theight: inherit;\\r\\n\\tfont-size: 18px;\\r\\n\\tfont-weight: bold;\\r\\n\\twidth: 100px;\\r\\n\\theight: inherit;\\r\\n\\tcursor: pointer;\\r\\n\\toutline: none;\\r\\n\\tborder: none;\\r\\n\\tbackground-color: #cb7cef;\\r\\n\\tcolor: white;\\r\\n\\tborder-top-right-radius: 5px;\\r\\n\\tborder-bottom-right-radius: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.Todo_todo__980ya {\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n  border-bottom: solid 1px rgb(221, 221, 221);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background: rgb(247, 238, 247);\\r\\n  cursor: pointer;\\r\\n  font-size: 18px;\\r\\n  color: #333;\\r\\n  -webkit-animation-name: Todo_opacity1__BkzS2;\\r\\n          animation-name: Todo_opacity1__BkzS2;\\r\\n  -webkit-animation-duration: 300ms;\\r\\n          animation-duration: 300ms;\\r\\n  justify-content: space-around;\\r\\n  border: 1px solid black;\\r\\n  margin-bottom: 7px;\\r\\n}\\r\\n\\r\\n.Todo_p__4Ng9h {\\r\\n  position: relative;\\r\\n  word-wrap: break-word;\\r\\n  padding: 20px 0;\\r\\n  width: 77.2%;\\r\\n\\r\\n}\\r\\n\\r\\n.Todo_todo__980ya:hover .Todo_deleteBtn__fLRzu {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.Todo_todo__980ya:first-of-type {\\r\\n  border-top-left-radius: 5px;\\r\\n  border-top-right-radius: 5px;\\r\\n}\\r\\n.Todo_checkboxContainer__UEsKC {\\r\\n  padding: 20px 0;\\r\\n}\\r\\n.Todo_checkbox__5k55t {\\r\\n  border: solid hsl(280, 87%, 65%) 1px;\\r\\n  width: 25px;\\r\\n  height: 25px;\\r\\n  border-radius: 50%;\\r\\n  margin: 0 20px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  transition: border 300ms ease-in-out;\\r\\n}\\r\\n\\r\\n.Todo_checked__e_UiU {\\r\\n  border: 0;\\r\\n  background: linear-gradient(hotpink, #ff0080);\\r\\n}\\r\\n\\r\\n.Todo_deleteBtn__fLRzu {\\r\\n  position: relative;\\r\\n  z-index: 10;\\r\\n  display: flex;\\r\\n  opacity: 0;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  padding: 20px;\\r\\n  min-width: 60px;\\r\\n  transition: opacity 300ms ease-in-out;\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 620px) {\\r\\n  .Todo_deleteBtn__fLRzu  {\\r\\n    opacity: 1;\\r\\n  }\\r\\n\\r\\n \\r\\n  .Todo_p__4Ng9h{\\r\\n    font-size:16px;\\r\\n  }\\r\\n}\\r\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://styles/Todo.module.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,gBAAgB;EAChB,yBAAwB;UAAxB,wBAAwB;AAC1B;;;;AAIA;CACC,YAAY;CACZ,aAAa;CACb,yBAAyB;CACzB,2BAA2B;CAC3B,8BAA8B;CAC9B,eAAe;CACf,iBAAiB;CACjB,qDAAqD;AACtD;;AAEA;CACC,eAAe;CACf,eAAe;CACf,iBAAiB;CACjB,YAAY;CACZ,eAAe;CACf,eAAe;CACf,aAAa;CACb,YAAY;CACZ,yBAAyB;CACzB,YAAY;CACZ,4BAA4B;CAC5B,+BAA+B;AAChC;;;;AAIA;EACE,WAAW;EACX,kBAAkB;EAClB,2CAA2C;EAC3C,aAAa;EACb,mBAAmB;EACnB,8BAA8B;EAC9B,eAAe;EACf,eAAe;EACf,WAAW;EACX,4CAAwB;UAAxB,oCAAwB;EACxB,iCAAyB;UAAzB,yBAAyB;EACzB,6BAA6B;EAC7B,uBAAuB;EACvB,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;EAClB,qBAAqB;EACrB,eAAe;EACf,YAAY;;AAEd;;AAEA;EACE,UAAU;AACZ;;AAEA;EACE,2BAA2B;EAC3B,4BAA4B;AAC9B;AACA;EACE,eAAe;AACjB;AACA;EACE,oCAAoC;EACpC,WAAW;EACX,YAAY;EACZ,kBAAkB;EAClB,cAAc;EACd,aAAa;EACb,uBAAuB;EACvB,mBAAmB;EACnB,eAAe;EACf,oCAAoC;AACtC;;AAEA;EACE,SAAS;EACT,6CAA6C;AAC/C;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,aAAa;EACb,UAAU;EACV,mBAAmB;EACnB,uBAAuB;EACvB,aAAa;EACb,eAAe;EACf,qCAAqC;AACvC;;;AAGA;EACE;IACE,UAAU;EACZ;;;EAGA;IACE,cAAc;EAChB;AACF\",\"sourcesContent\":[\".container{\\r\\n  display: flex;\\r\\n  flex-direction: column;\\r\\n  margin-top: 20px;\\r\\n  padding-inline-end: 40px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.input {\\r\\n\\tflex-grow: 1;\\r\\n\\toutline: none;\\r\\n\\tborder: 1px solid #cb7cef;\\r\\n\\tborder-top-left-radius: 5px;\\r\\n\\tborder-bottom-left-radius: 5px;\\r\\n\\tfont-size: 16px;\\r\\n\\tpadding-left: 5px;\\r\\n\\tbox-shadow: 0px 2px 35px 6px rgba(203, 124, 239, 0.3);\\r\\n}\\r\\n\\r\\n.submit_btn {\\r\\n\\theight: inherit;\\r\\n\\tfont-size: 18px;\\r\\n\\tfont-weight: bold;\\r\\n\\twidth: 100px;\\r\\n\\theight: inherit;\\r\\n\\tcursor: pointer;\\r\\n\\toutline: none;\\r\\n\\tborder: none;\\r\\n\\tbackground-color: #cb7cef;\\r\\n\\tcolor: white;\\r\\n\\tborder-top-right-radius: 5px;\\r\\n\\tborder-bottom-right-radius: 5px;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n.todo {\\r\\n  width: 100%;\\r\\n  position: relative;\\r\\n  border-bottom: solid 1px rgb(221, 221, 221);\\r\\n  display: flex;\\r\\n  align-items: center;\\r\\n  background: rgb(247, 238, 247);\\r\\n  cursor: pointer;\\r\\n  font-size: 18px;\\r\\n  color: #333;\\r\\n  animation-name: opacity1;\\r\\n  animation-duration: 300ms;\\r\\n  justify-content: space-around;\\r\\n  border: 1px solid black;\\r\\n  margin-bottom: 7px;\\r\\n}\\r\\n\\r\\n.p {\\r\\n  position: relative;\\r\\n  word-wrap: break-word;\\r\\n  padding: 20px 0;\\r\\n  width: 77.2%;\\r\\n\\r\\n}\\r\\n\\r\\n.todo:hover .deleteBtn {\\r\\n  opacity: 1;\\r\\n}\\r\\n\\r\\n.todo:first-of-type {\\r\\n  border-top-left-radius: 5px;\\r\\n  border-top-right-radius: 5px;\\r\\n}\\r\\n.checkboxContainer {\\r\\n  padding: 20px 0;\\r\\n}\\r\\n.checkbox {\\r\\n  border: solid hsl(280, 87%, 65%) 1px;\\r\\n  width: 25px;\\r\\n  height: 25px;\\r\\n  border-radius: 50%;\\r\\n  margin: 0 20px;\\r\\n  display: flex;\\r\\n  justify-content: center;\\r\\n  align-items: center;\\r\\n  cursor: pointer;\\r\\n  transition: border 300ms ease-in-out;\\r\\n}\\r\\n\\r\\n.checked {\\r\\n  border: 0;\\r\\n  background: linear-gradient(hotpink, #ff0080);\\r\\n}\\r\\n\\r\\n.deleteBtn {\\r\\n  position: relative;\\r\\n  z-index: 10;\\r\\n  display: flex;\\r\\n  opacity: 0;\\r\\n  align-items: center;\\r\\n  justify-content: center;\\r\\n  padding: 20px;\\r\\n  min-width: 60px;\\r\\n  transition: opacity 300ms ease-in-out;\\r\\n}\\r\\n\\r\\n\\r\\n@media only screen and (max-width: 620px) {\\r\\n  .deleteBtn  {\\r\\n    opacity: 1;\\r\\n  }\\r\\n\\r\\n \\r\\n  .p{\\r\\n    font-size:16px;\\r\\n  }\\r\\n}\\r\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\n___CSS_LOADER_EXPORT___.locals = {\n\t\"container\": \"Todo_container__z5Pr_\",\n\t\"input\": \"Todo_input__V0Et7\",\n\t\"submit_btn\": \"Todo_submit_btn__Dof7d\",\n\t\"todo\": \"Todo_todo__980ya\",\n\t\"opacity1\": \"Todo_opacity1__BkzS2\",\n\t\"p\": \"Todo_p__4Ng9h\",\n\t\"deleteBtn\": \"Todo_deleteBtn__fLRzu\",\n\t\"checkboxContainer\": \"Todo_checkboxContainer__UEsKC\",\n\t\"checkbox\": \"Todo_checkbox__5k55t\",\n\t\"checked\": \"Todo_checked__e_UiU\"\n};\nmodule.exports = ___CSS_LOADER_EXPORT___;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js":
/*!************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js ***!
  \************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\n/*\r\n  MIT License http://www.opensource.org/licenses/mit-license.php\r\n  Author Tobias Koppers @sokra\r\n*/ // css base code, injected by the css-loader\r\n// eslint-disable-next-line func-names\r\nmodule.exports = function(useSourceMap) {\r\n    var list = [] // return the list of modules as css string\r\n    ;\r\n    list.toString = function toString() {\r\n        return this.map(function(item) {\r\n            var content = cssWithMappingToString(item, useSourceMap);\r\n            if (item[2]) {\r\n                return \"@media \".concat(item[2], \" {\").concat(content, \"}\");\r\n            }\r\n            return content;\r\n        }).join(\"\");\r\n    } // import a list of modules into the list\r\n    ;\r\n    // eslint-disable-next-line func-names\r\n    list.i = function(modules, mediaQuery, dedupe) {\r\n        if (typeof modules === \"string\") {\r\n            // eslint-disable-next-line no-param-reassign\r\n            modules = [\r\n                [\r\n                    null,\r\n                    modules,\r\n                    \"\"\r\n                ]\r\n            ];\r\n        }\r\n        var alreadyImportedModules = {};\r\n        if (dedupe) {\r\n            for(var i = 0; i < this.length; i++){\r\n                // eslint-disable-next-line prefer-destructuring\r\n                var id = this[i][0];\r\n                if (id != null) {\r\n                    alreadyImportedModules[id] = true;\r\n                }\r\n            }\r\n        }\r\n        for(var _i = 0; _i < modules.length; _i++){\r\n            var item = [].concat(modules[_i]);\r\n            if (dedupe && alreadyImportedModules[item[0]]) {\r\n                continue;\r\n            }\r\n            if (mediaQuery) {\r\n                if (!item[2]) {\r\n                    item[2] = mediaQuery;\r\n                } else {\r\n                    item[2] = \"\".concat(mediaQuery, \" and \").concat(item[2]);\r\n                }\r\n            }\r\n            list.push(item);\r\n        }\r\n    };\r\n    return list;\r\n};\r\nfunction cssWithMappingToString(item, useSourceMap) {\r\n    var content = item[1] || \"\" // eslint-disable-next-line prefer-destructuring\r\n    ;\r\n    var cssMapping = item[3];\r\n    if (!cssMapping) {\r\n        return content;\r\n    }\r\n    if (useSourceMap && typeof btoa === \"function\") {\r\n        var sourceMapping = toComment(cssMapping);\r\n        var sourceURLs = cssMapping.sources.map(function(source) {\r\n            return \"/*# sourceURL=\".concat(cssMapping.sourceRoot || \"\").concat(source, \" */\");\r\n        });\r\n        return [\r\n            content\r\n        ].concat(sourceURLs).concat([\r\n            sourceMapping\r\n        ]).join(\"\\n\");\r\n    }\r\n    return [\r\n        content\r\n    ].join(\"\\n\");\r\n} // Adapted from convert-source-map (MIT)\r\nfunction toComment(sourceMap) {\r\n    // eslint-disable-next-line no-undef\r\n    var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));\r\n    var data = \"sourceMappingURL=data:application/json;charset=utf-8;base64,\".concat(base64);\r\n    return \"/*# \".concat(data, \" */\");\r\n}\r\n\r\n//# sourceMappingURL=api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9jc3MtbG9hZGVyL3NyYy9ydW50aW1lL2FwaS5qcy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9EQUFvRCxxQkFBcUI7QUFDekU7QUFDQTtBQUNBLFNBQVM7QUFDVCxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGlCQUFpQjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixxQkFBcUI7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsRUFBRTtBQUNGO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL3J1bnRpbWUvYXBpLmpzP2NhNGQiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XHJcbi8qXHJcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovIC8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBmdW5jLW5hbWVzXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24odXNlU291cmNlTWFwKSB7XHJcbiAgICB2YXIgbGlzdCA9IFtdIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcclxuICAgIDtcclxuICAgIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24oaXRlbSkge1xyXG4gICAgICAgICAgICB2YXIgY29udGVudCA9IGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcoaXRlbSwgdXNlU291cmNlTWFwKTtcclxuICAgICAgICAgICAgaWYgKGl0ZW1bMl0pIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKS5jb25jYXQoY29udGVudCwgXCJ9XCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBjb250ZW50O1xyXG4gICAgICAgIH0pLmpvaW4oXCJcIik7XHJcbiAgICB9IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcbiAgICA7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZnVuYy1uYW1lc1xyXG4gICAgbGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSwgZGVkdXBlKSB7XHJcbiAgICAgICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1wYXJhbS1yZWFzc2lnblxyXG4gICAgICAgICAgICBtb2R1bGVzID0gW1xyXG4gICAgICAgICAgICAgICAgW1xyXG4gICAgICAgICAgICAgICAgICAgIG51bGwsXHJcbiAgICAgICAgICAgICAgICAgICAgbW9kdWxlcyxcclxuICAgICAgICAgICAgICAgICAgICBcIlwiXHJcbiAgICAgICAgICAgICAgICBdXHJcbiAgICAgICAgICAgIF07XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcbiAgICAgICAgaWYgKGRlZHVwZSkge1xyXG4gICAgICAgICAgICBmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKyl7XHJcbiAgICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgcHJlZmVyLWRlc3RydWN0dXJpbmdcclxuICAgICAgICAgICAgICAgIHZhciBpZCA9IHRoaXNbaV1bMF07XHJcbiAgICAgICAgICAgICAgICBpZiAoaWQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaWRdID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBmb3IodmFyIF9pID0gMDsgX2kgPCBtb2R1bGVzLmxlbmd0aDsgX2krKyl7XHJcbiAgICAgICAgICAgIHZhciBpdGVtID0gW10uY29uY2F0KG1vZHVsZXNbX2ldKTtcclxuICAgICAgICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XHJcbiAgICAgICAgICAgICAgICBjb250aW51ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAobWVkaWFRdWVyeSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFpdGVtWzJdKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaXRlbVsyXSA9IG1lZGlhUXVlcnk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGl0ZW1bMl0gPSBcIlwiLmNvbmNhdChtZWRpYVF1ZXJ5LCBcIiBhbmQgXCIpLmNvbmNhdChpdGVtWzJdKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsaXN0LnB1c2goaXRlbSk7XHJcbiAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHJldHVybiBsaXN0O1xyXG59O1xyXG5mdW5jdGlvbiBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0sIHVzZVNvdXJjZU1hcCkge1xyXG4gICAgdmFyIGNvbnRlbnQgPSBpdGVtWzFdIHx8IFwiXCIgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXHJcbiAgICA7XHJcbiAgICB2YXIgY3NzTWFwcGluZyA9IGl0ZW1bM107XHJcbiAgICBpZiAoIWNzc01hcHBpbmcpIHtcclxuICAgICAgICByZXR1cm4gY29udGVudDtcclxuICAgIH1cclxuICAgIGlmICh1c2VTb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xyXG4gICAgICAgIHZhciBzb3VyY2VNYXBwaW5nID0gdG9Db21tZW50KGNzc01hcHBpbmcpO1xyXG4gICAgICAgIHZhciBzb3VyY2VVUkxzID0gY3NzTWFwcGluZy5zb3VyY2VzLm1hcChmdW5jdGlvbihzb3VyY2UpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHJldHVybiBbXHJcbiAgICAgICAgICAgIGNvbnRlbnRcclxuICAgICAgICBdLmNvbmNhdChzb3VyY2VVUkxzKS5jb25jYXQoW1xyXG4gICAgICAgICAgICBzb3VyY2VNYXBwaW5nXHJcbiAgICAgICAgXSkuam9pbihcIlxcblwiKTtcclxuICAgIH1cclxuICAgIHJldHVybiBbXHJcbiAgICAgICAgY29udGVudFxyXG4gICAgXS5qb2luKFwiXFxuXCIpO1xyXG59IC8vIEFkYXB0ZWQgZnJvbSBjb252ZXJ0LXNvdXJjZS1tYXAgKE1JVClcclxuZnVuY3Rpb24gdG9Db21tZW50KHNvdXJjZU1hcCkge1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmXHJcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKTtcclxuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcclxuICAgIHJldHVybiBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XHJcbn1cclxuXHJcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWFwaS5qcy5tYXAiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/css-loader/src/runtime/api.js\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=D%3A%5Ccanabis%5CTodo%5Cclient%5Cpages%5Cindex.js&page=%2F!":
/*!***************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=D%3A%5Ccanabis%5CTodo%5Cclient%5Cpages%5Cindex.js&page=%2F! ***!
  \***************************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/\",\n      function () {\n        return __webpack_require__(/*! ./pages/index.js */ \"./pages/index.js\");\n      }\n    ]);\n    if(true) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/\"])\n      });\n    }\n  //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWNsaWVudC1wYWdlcy1sb2FkZXIuanM/YWJzb2x1dGVQYWdlUGF0aD1EJTNBJTVDY2FuYWJpcyU1Q1RvZG8lNUNjbGllbnQlNUNwYWdlcyU1Q2luZGV4LmpzJnBhZ2U9JTJGIS5qcyIsIm1hcHBpbmdzIjoiO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZUFBZSxtQkFBTyxDQUFDLDBDQUFrQjtBQUN6QztBQUNBO0FBQ0EsT0FBTyxJQUFVO0FBQ2pCLE1BQU0sVUFBVTtBQUNoQjtBQUNBLE9BQU87QUFDUDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/NjBjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcbiAgICAod2luZG93Ll9fTkVYVF9QID0gd2luZG93Ll9fTkVYVF9QIHx8IFtdKS5wdXNoKFtcbiAgICAgIFwiL1wiLFxuICAgICAgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gcmVxdWlyZShcIi4vcGFnZXMvaW5kZXguanNcIik7XG4gICAgICB9XG4gICAgXSk7XG4gICAgaWYobW9kdWxlLmhvdCkge1xuICAgICAgbW9kdWxlLmhvdC5kaXNwb3NlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgd2luZG93Ll9fTkVYVF9QLnB1c2goW1wiL1wiXSlcbiAgICAgIH0pO1xuICAgIH1cbiAgIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=D%3A%5Ccanabis%5CTodo%5Cclient%5Cpages%5Cindex.js&page=%2F!\n"));

/***/ }),

/***/ "./styles/Todo.module.css":
/*!********************************!*\
  !*** ./styles/Todo.module.css ***!
  \********************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var api = __webpack_require__(/*! !../node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\");\n            var content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./Todo.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css\");\n\n            content = content.__esModule ? content.default : content;\n\n            if (typeof content === 'string') {\n              content = [[module.id, content, '']];\n            }\n\nvar options = {};\n\noptions.insert = function(element) {\r\n                    // These elements should always exist. If they do not,\r\n                    // this code should fail.\r\n                    var anchorElement = document.querySelector(\"#__next_css__DO_NOT_USE__\");\r\n                    var parentNode = anchorElement.parentNode// Normally <head>\r\n                    ;\r\n                    // Each style tag should be placed right before our\r\n                    // anchor. By inserting before and not after, we do not\r\n                    // need to track the last inserted element.\r\n                    parentNode.insertBefore(element, anchorElement);\r\n                };\noptions.singleton = false;\n\nvar update = api(content, options);\n\n\nif (true) {\n  if (!content.locals || module.hot.invalidate) {\n    var isEqualLocals = function isEqualLocals(a, b, isNamedExport) {\r\n    if (!a && b || a && !b) {\r\n        return false;\r\n    }\r\n    let p;\r\n    for(p in a){\r\n        if (isNamedExport && p === \"default\") {\r\n            continue;\r\n        }\r\n        if (a[p] !== b[p]) {\r\n            return false;\r\n        }\r\n    }\r\n    for(p in b){\r\n        if (isNamedExport && p === \"default\") {\r\n            continue;\r\n        }\r\n        if (!a[p]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\n    var oldLocals = content.locals;\n\n    module.hot.accept(\n      /*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./Todo.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css\",\n      function () {\n        content = __webpack_require__(/*! !!../node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!../node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./Todo.module.css */ \"./node_modules/next/dist/build/webpack/loaders/css-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[1]!./node_modules/next/dist/build/webpack/loaders/postcss-loader/src/index.js??ruleSet[1].rules[2].oneOf[4].use[2]!./styles/Todo.module.css\");\n\n              content = content.__esModule ? content.default : content;\n\n              if (typeof content === 'string') {\n                content = [[module.id, content, '']];\n              }\n\n              if (!isEqualLocals(oldLocals, content.locals)) {\n                module.hot.invalidate();\n\n                return;\n              }\n\n              oldLocals = content.locals;\n\n              update(content);\n      }\n    )\n  }\n\n  module.hot.dispose(function() {\n    update();\n  });\n}\n\nmodule.exports = content.locals || {};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zdHlsZXMvVG9kby5tb2R1bGUuY3NzLmpzIiwibWFwcGluZ3MiOiJBQUFBLFVBQVUsbUJBQU8sQ0FBQyxvTkFBd0c7QUFDMUgsMEJBQTBCLG1CQUFPLENBQUMsK2VBQW1QOztBQUVyUjs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOzs7QUFHQSxJQUFJLElBQVU7QUFDZCx5QkFBeUIsVUFBVTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxpQkFBaUI7QUFDckIsTUFBTSwrZUFBbVA7QUFDelA7QUFDQSxrQkFBa0IsbUJBQU8sQ0FBQywrZUFBbVA7O0FBRTdROztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGdCQUFnQixVQUFVOztBQUUxQjtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLEVBQUUsVUFBVTtBQUNaO0FBQ0EsR0FBRztBQUNIOztBQUVBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3N0eWxlcy9Ub2RvLm1vZHVsZS5jc3M/ZTFiOCJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBpID0gcmVxdWlyZShcIiEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXN0eWxlLWxvYWRlci9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiKTtcbiAgICAgICAgICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls0XS51c2VbMl0hLi9Ub2RvLm1vZHVsZS5jc3NcIik7XG5cbiAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICAgICAgICAgIH1cblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5pbnNlcnQgPSBmdW5jdGlvbihlbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gVGhlc2UgZWxlbWVudHMgc2hvdWxkIGFsd2F5cyBleGlzdC4gSWYgdGhleSBkbyBub3QsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcyBjb2RlIHNob3VsZCBmYWlsLlxyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhbmNob3JFbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNfX25leHRfY3NzX19ET19OT1RfVVNFX19cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgdmFyIHBhcmVudE5vZGUgPSBhbmNob3JFbGVtZW50LnBhcmVudE5vZGUvLyBOb3JtYWxseSA8aGVhZD5cclxuICAgICAgICAgICAgICAgICAgICA7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gRWFjaCBzdHlsZSB0YWcgc2hvdWxkIGJlIHBsYWNlZCByaWdodCBiZWZvcmUgb3VyXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gYW5jaG9yLiBCeSBpbnNlcnRpbmcgYmVmb3JlIGFuZCBub3QgYWZ0ZXIsIHdlIGRvIG5vdFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIG5lZWQgdG8gdHJhY2sgdGhlIGxhc3QgaW5zZXJ0ZWQgZWxlbWVudC5cclxuICAgICAgICAgICAgICAgICAgICBwYXJlbnROb2RlLmluc2VydEJlZm9yZShlbGVtZW50LCBhbmNob3JFbGVtZW50KTtcclxuICAgICAgICAgICAgICAgIH07XG5vcHRpb25zLnNpbmdsZXRvbiA9IGZhbHNlO1xuXG52YXIgdXBkYXRlID0gYXBpKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cbmlmIChtb2R1bGUuaG90KSB7XG4gIGlmICghY29udGVudC5sb2NhbHMgfHwgbW9kdWxlLmhvdC5pbnZhbGlkYXRlKSB7XG4gICAgdmFyIGlzRXF1YWxMb2NhbHMgPSBmdW5jdGlvbiBpc0VxdWFsTG9jYWxzKGEsIGIsIGlzTmFtZWRFeHBvcnQpIHtcclxuICAgIGlmICghYSAmJiBiIHx8IGEgJiYgIWIpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICB9XHJcbiAgICBsZXQgcDtcclxuICAgIGZvcihwIGluIGEpe1xyXG4gICAgICAgIGlmIChpc05hbWVkRXhwb3J0ICYmIHAgPT09IFwiZGVmYXVsdFwiKSB7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoYVtwXSAhPT0gYltwXSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgZm9yKHAgaW4gYil7XHJcbiAgICAgICAgaWYgKGlzTmFtZWRFeHBvcnQgJiYgcCA9PT0gXCJkZWZhdWx0XCIpIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghYVtwXSkge1xyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbn07XG4gICAgdmFyIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgbW9kdWxlLmhvdC5hY2NlcHQoXG4gICAgICBcIiEhLi4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9idWlsZC93ZWJwYWNrL2xvYWRlcnMvY3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzFdIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL3Bvc3Rjc3MtbG9hZGVyL3NyYy9pbmRleC5qcz8/cnVsZVNldFsxXS5ydWxlc1syXS5vbmVPZls0XS51c2VbMl0hLi9Ub2RvLm1vZHVsZS5jc3NcIixcbiAgICAgIGZ1bmN0aW9uICgpIHtcbiAgICAgICAgY29udGVudCA9IHJlcXVpcmUoXCIhIS4uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL2Nzcy1sb2FkZXIvc3JjL2luZGV4LmpzPz9ydWxlU2V0WzFdLnJ1bGVzWzJdLm9uZU9mWzRdLnVzZVsxXSEuLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9wb3N0Y3NzLWxvYWRlci9zcmMvaW5kZXguanM/P3J1bGVTZXRbMV0ucnVsZXNbMl0ub25lT2ZbNF0udXNlWzJdIS4vVG9kby5tb2R1bGUuY3NzXCIpO1xuXG4gICAgICAgICAgICAgIGNvbnRlbnQgPSBjb250ZW50Ll9fZXNNb2R1bGUgPyBjb250ZW50LmRlZmF1bHQgOiBjb250ZW50O1xuXG4gICAgICAgICAgICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgICAgICAgICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgICBpZiAoIWlzRXF1YWxMb2NhbHMob2xkTG9jYWxzLCBjb250ZW50LmxvY2FscykpIHtcbiAgICAgICAgICAgICAgICBtb2R1bGUuaG90LmludmFsaWRhdGUoKTtcblxuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICAgIG9sZExvY2FscyA9IGNvbnRlbnQubG9jYWxzO1xuXG4gICAgICAgICAgICAgIHVwZGF0ZShjb250ZW50KTtcbiAgICAgIH1cbiAgICApXG4gIH1cblxuICBtb2R1bGUuaG90LmRpc3Bvc2UoZnVuY3Rpb24oKSB7XG4gICAgdXBkYXRlKCk7XG4gIH0pO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9OyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./styles/Todo.module.css\n"));

/***/ }),

/***/ "./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js ***!
  \************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\r\nconst isOldIE = function isOldIE() {\r\n    let memo;\r\n    return function memorize() {\r\n        if (typeof memo === \"undefined\") {\r\n            // Test for IE <= 9 as proposed by Browserhacks\r\n            // @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805\r\n            // Tests for existence of standard globals is to allow style-loader\r\n            // to operate correctly into non-standard environments\r\n            // @see https://github.com/webpack-contrib/style-loader/issues/177\r\n            memo = Boolean(window && document && document.all && !window.atob);\r\n        }\r\n        return memo;\r\n    };\r\n}();\r\nconst getTarget = function getTarget() {\r\n    const memo = {};\r\n    return function memorize(target) {\r\n        if (typeof memo[target] === \"undefined\") {\r\n            let styleTarget = document.querySelector(target);\r\n            // Special case to return head of iframe instead of iframe itself\r\n            if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {\r\n                try {\r\n                    // This will throw an exception if access to iframe is blocked\r\n                    // due to cross-origin restrictions\r\n                    styleTarget = styleTarget.contentDocument.head;\r\n                } catch (e) {\r\n                    // istanbul ignore next\r\n                    styleTarget = null;\r\n                }\r\n            }\r\n            memo[target] = styleTarget;\r\n        }\r\n        return memo[target];\r\n    };\r\n}();\r\nconst stylesInDom = [];\r\nfunction getIndexByIdentifier(identifier) {\r\n    let result = -1;\r\n    for(let i = 0; i < stylesInDom.length; i++){\r\n        if (stylesInDom[i].identifier === identifier) {\r\n            result = i;\r\n            break;\r\n        }\r\n    }\r\n    return result;\r\n}\r\nfunction modulesToDom(list, options) {\r\n    const idCountMap = {};\r\n    const identifiers = [];\r\n    for(let i = 0; i < list.length; i++){\r\n        const item = list[i];\r\n        const id = options.base ? item[0] + options.base : item[0];\r\n        const count = idCountMap[id] || 0;\r\n        const identifier = id + \" \" + count.toString();\r\n        idCountMap[id] = count + 1;\r\n        const index = getIndexByIdentifier(identifier);\r\n        const obj = {\r\n            css: item[1],\r\n            media: item[2],\r\n            sourceMap: item[3]\r\n        };\r\n        if (index !== -1) {\r\n            stylesInDom[index].references++;\r\n            stylesInDom[index].updater(obj);\r\n        } else {\r\n            stylesInDom.push({\r\n                identifier: identifier,\r\n                updater: addStyle(obj, options),\r\n                references: 1\r\n            });\r\n        }\r\n        identifiers.push(identifier);\r\n    }\r\n    return identifiers;\r\n}\r\nfunction insertStyleElement(options) {\r\n    const style = document.createElement(\"style\");\r\n    const attributes = options.attributes || {};\r\n    if (typeof attributes.nonce === \"undefined\") {\r\n        const nonce = // eslint-disable-next-line no-undef\r\n         true ? __webpack_require__.nc : 0;\r\n        if (nonce) {\r\n            attributes.nonce = nonce;\r\n        }\r\n    }\r\n    Object.keys(attributes).forEach(function(key) {\r\n        style.setAttribute(key, attributes[key]);\r\n    });\r\n    if (typeof options.insert === \"function\") {\r\n        options.insert(style);\r\n    } else {\r\n        const target = getTarget(options.insert || \"head\");\r\n        if (!target) {\r\n            throw new Error(\"Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.\");\r\n        }\r\n        target.appendChild(style);\r\n    }\r\n    return style;\r\n}\r\nfunction removeStyleElement(style) {\r\n    // istanbul ignore if\r\n    if (style.parentNode === null) {\r\n        return false;\r\n    }\r\n    style.parentNode.removeChild(style);\r\n}\r\n/* istanbul ignore next  */ const replaceText = function replaceText() {\r\n    const textStore = [];\r\n    return function replace(index, replacement) {\r\n        textStore[index] = replacement;\r\n        return textStore.filter(Boolean).join(\"\\n\");\r\n    };\r\n}();\r\nfunction applyToSingletonTag(style, index, remove, obj) {\r\n    const css = remove ? \"\" : obj.media ? \"@media \" + obj.media + \" {\" + obj.css + \"}\" : obj.css;\r\n    // For old IE\r\n    /* istanbul ignore if  */ if (style.styleSheet) {\r\n        style.styleSheet.cssText = replaceText(index, css);\r\n    } else {\r\n        const cssNode = document.createTextNode(css);\r\n        const childNodes = style.childNodes;\r\n        if (childNodes[index]) {\r\n            style.removeChild(childNodes[index]);\r\n        }\r\n        if (childNodes.length) {\r\n            style.insertBefore(cssNode, childNodes[index]);\r\n        } else {\r\n            style.appendChild(cssNode);\r\n        }\r\n    }\r\n}\r\nfunction applyToTag(style, options, obj) {\r\n    let css = obj.css;\r\n    const media = obj.media;\r\n    const sourceMap = obj.sourceMap;\r\n    if (media) {\r\n        style.setAttribute(\"media\", media);\r\n    } else {\r\n        style.removeAttribute(\"media\");\r\n    }\r\n    if (sourceMap && typeof btoa !== \"undefined\") {\r\n        css += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n    }\r\n    // For old IE\r\n    /* istanbul ignore if  */ if (style.styleSheet) {\r\n        style.styleSheet.cssText = css;\r\n    } else {\r\n        while(style.firstChild){\r\n            style.removeChild(style.firstChild);\r\n        }\r\n        style.appendChild(document.createTextNode(css));\r\n    }\r\n}\r\nlet singleton = null;\r\nlet singletonCounter = 0;\r\nfunction addStyle(obj, options) {\r\n    let style;\r\n    let update;\r\n    let remove;\r\n    if (options.singleton) {\r\n        const styleIndex = singletonCounter++;\r\n        style = singleton || (singleton = insertStyleElement(options));\r\n        update = applyToSingletonTag.bind(null, style, styleIndex, false);\r\n        remove = applyToSingletonTag.bind(null, style, styleIndex, true);\r\n    } else {\r\n        style = insertStyleElement(options);\r\n        update = applyToTag.bind(null, style, options);\r\n        remove = function() {\r\n            removeStyleElement(style);\r\n        };\r\n    }\r\n    update(obj);\r\n    return function updateStyle(newObj) {\r\n        if (newObj) {\r\n            if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) {\r\n                return;\r\n            }\r\n            update(obj = newObj);\r\n        } else {\r\n            remove();\r\n        }\r\n    };\r\n}\r\nmodule.exports = function(list, options) {\r\n    options = options || {};\r\n    // Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n    // tags it will allow on a page\r\n    if (!options.singleton && typeof options.singleton !== \"boolean\") {\r\n        options.singleton = isOldIE();\r\n    }\r\n    list = list || [];\r\n    let lastIdentifiers = modulesToDom(list, options);\r\n    return function update(newList) {\r\n        newList = newList || [];\r\n        if (Object.prototype.toString.call(newList) !== \"[object Array]\") {\r\n            return;\r\n        }\r\n        for(let i = 0; i < lastIdentifiers.length; i++){\r\n            const identifier = lastIdentifiers[i];\r\n            const index = getIndexByIdentifier(identifier);\r\n            stylesInDom[index].references--;\r\n        }\r\n        const newLastIdentifiers = modulesToDom(newList, options);\r\n        for(let i1 = 0; i1 < lastIdentifiers.length; i1++){\r\n            const identifier = lastIdentifiers[i1];\r\n            const index = getIndexByIdentifier(identifier);\r\n            if (stylesInDom[index].references === 0) {\r\n                stylesInDom[index].updater();\r\n                stylesInDom.splice(index, 1);\r\n            }\r\n        }\r\n        lastIdentifiers = newLastIdentifiers;\r\n    };\r\n};\r\n\r\n//# sourceMappingURL=injectStylesIntoStyleTag.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/next/dist/build/webpack/loaders/next-style-loader/runtime/injectStylesIntoStyleTag.js\n"));

/***/ }),

/***/ "./components/ToDo.js":
/*!****************************!*\
  !*** ./components/ToDo.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Todo; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../styles/Todo.module.css */ \"./styles/Todo.module.css\");\n/* harmony import */ var _styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1__);\n\n\nfunction Todo(param) {\n    var id = param.id, handleComplete = param.handleComplete, handleDelete = param.handleDelete, todo = param.todo, isDone = param.isDone, handleUpdate = param.handleUpdate;\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"li\", {\n        className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default().todo),\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                onClick: function() {\n                    return handleComplete(id);\n                },\n                className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default().checkboxContainer),\n                children: isDone ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default().checkbox) + \" \" + (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default().checked),\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                        xmlns: \"http://www.w3.org/2000/svg\",\n                        width: \"11\",\n                        height: \"9\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            stroke: \"#FFF\",\n                            strokeWidth: \"2\",\n                            d: \"M1 4.304L3.696 7l6-6\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                            lineNumber: 25,\n                            columnNumber: 29\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                        lineNumber: 20,\n                        columnNumber: 25\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 19,\n                    columnNumber: 21\n                }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                    className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_1___default().checkbox)\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 33,\n                    columnNumber: 21\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                lineNumber: 14,\n                columnNumber: 13\n            }, this),\n            isDone ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"s\", {\n                    style: {\n                        opacity: \"0.3\"\n                    },\n                    children: todo\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 39,\n                    columnNumber: 21\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                lineNumber: 38,\n                columnNumber: 17\n            }, this) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                    children: todo\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 44,\n                    columnNumber: 20\n                }, this)\n            }, void 0, false),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"btn\",\n                onClick: function() {\n                    return handleDelete(id);\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"26\",\n                    height: \"26\",\n                    viewBox: \"0 0 16 16\",\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                        d: \"M2.146 2.854a.5.5 0 1 1 .708-.708L8 7.293l5.146-5.147a.5.5 0 0 1 .708.708L8.707 8l5.147 5.146a.5.5 0 0 1-.708.708L8 8.707l-5.146 5.147a.5.5 0 0 1-.708-.708L7.293 8 2.146 2.854Z\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                        lineNumber: 56,\n                        columnNumber: 21\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 50,\n                    columnNumber: 17\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                lineNumber: 49,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"btn\",\n                onClick: function() {\n                    return handleUpdate(id);\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    xmlns: \"http://www.w3.org/2000/svg\",\n                    width: \"16\",\n                    height: \"16\",\n                    viewBox: \"0 0 16 16\",\n                    children: [\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M15.502 1.94a.5.5 0 0 1 0 .706L14.459 3.69l-2-2L13.502.646a.5.5 0 0 1 .707 0l1.293 1.293zm-1.75 2.456-2-2L4.939 9.21a.5.5 0 0 0-.121.196l-.805 2.414a.25.25 0 0 0 .316.316l2.414-.805a.5.5 0 0 0 .196-.12l6.813-6.814z\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                            lineNumber: 64,\n                            columnNumber: 17\n                        }, this),\n                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n                            d: \"M1 13.5A1.5 1.5 0 0 0 2.5 15h11a1.5 1.5 0 0 0 1.5-1.5v-6a.5.5 0 0 0-1 0v6a.5.5 0 0 1-.5.5h-11a.5.5 0 0 1-.5-.5v-11a.5.5 0 0 1 .5-.5H9a.5.5 0 0 0 0-1H2.5A1.5 1.5 0 0 0 1 2.5v11z\"\n                        }, void 0, false, {\n                            fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                            lineNumber: 65,\n                            columnNumber: 17\n                        }, this)\n                    ]\n                }, void 0, true, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                    lineNumber: 60,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n                lineNumber: 59,\n                columnNumber: 13\n            }, this)\n        ]\n    }, id, true, {\n        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\components\\\\ToDo.js\",\n        lineNumber: 13,\n        columnNumber: 9\n    }, this);\n};\n_c = Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL1RvRG8uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUErQztBQUVoQyxTQUFTQyxJQUFJLENBQUMsS0FRNUIsRUFBRTtRQVBDQyxFQUFFLEdBRHVCLEtBUTVCLENBUEdBLEVBQUUsRUFDRkMsY0FBYyxHQUZXLEtBUTVCLENBTkdBLGNBQWMsRUFDZEMsWUFBWSxHQUhhLEtBUTVCLENBTEdBLFlBQVksRUFDWkMsSUFBSSxHQUpxQixLQVE1QixDQUpHQSxJQUFJLEVBQ0pDLE1BQU0sR0FMbUIsS0FRNUIsQ0FIR0EsTUFBTSxFQUNOQyxZQUFZLEdBTmEsS0FRNUIsQ0FGR0EsWUFBWTtJQUdaLHFCQUNJLDhEQUFDQyxJQUFFO1FBQUNDLFNBQVMsRUFBRVQscUVBQVc7OzBCQUN0Qiw4REFBQ1UsS0FBRztnQkFDQUMsT0FBTyxFQUFFOzJCQUFNUixjQUFjLENBQUNELEVBQUUsQ0FBQztpQkFBQTtnQkFDakNPLFNBQVMsRUFBRVQsa0ZBQXdCOzBCQUVsQ00sTUFBTSxpQkFDSCw4REFBQ0ksS0FBRztvQkFBQ0QsU0FBUyxFQUFFVCx5RUFBZSxHQUFHLEdBQUcsR0FBR0Esd0VBQWM7OEJBQ2xELDRFQUFDZSxLQUFHO3dCQUNBQyxLQUFLLEVBQUMsNEJBQTRCO3dCQUNsQ0MsS0FBSyxFQUFDLElBQUk7d0JBQ1ZDLE1BQU0sRUFBQyxHQUFHO2tDQUVWLDRFQUFDQyxNQUFJOzRCQUNEQyxNQUFNLEVBQUMsTUFBTTs0QkFDYkMsV0FBVyxFQUFDLEdBQUc7NEJBQ2ZDLENBQUMsRUFBQyxzQkFBc0I7Ozs7O2dDQUMxQjs7Ozs7NEJBQ0E7Ozs7O3dCQUNKLGlCQUVOLDhEQUFDWixLQUFHO29CQUFDRCxTQUFTLEVBQUVULHlFQUFlOzs7Ozt3QkFBUTs7Ozs7b0JBRXpDO1lBRUxNLE1BQU0saUJBQ0gsOERBQUNpQixHQUFDOzBCQUNFLDRFQUFDQyxHQUFDO29CQUFDQyxLQUFLLEVBQUU7d0JBQUVDLE9BQU8sRUFBRSxLQUFLO3FCQUFFOzhCQUFHckIsSUFBSTs7Ozs7d0JBQUs7Ozs7O29CQUN4QyxpQkFFSjswQkFFRyw0RUFBQ2tCLEdBQUM7OEJBQUVsQixJQUFJOzs7Ozt3QkFBSzs2QkFFYjswQkFHUCw4REFBQ0ssS0FBRztnQkFBQ0QsU0FBUyxFQUFDLEtBQUs7Z0JBQUNFLE9BQU8sRUFBRTsyQkFBTVAsWUFBWSxDQUFDRixFQUFFLENBQUM7aUJBQUE7MEJBQ2hELDRFQUFDYSxLQUFHO29CQUNBQyxLQUFLLEVBQUMsNEJBQTRCO29CQUNsQ0MsS0FBSyxFQUFDLElBQUk7b0JBQ1ZDLE1BQU0sRUFBQyxJQUFJO29CQUNYUyxPQUFPLEVBQUMsV0FBVzs4QkFFbkIsNEVBQUNSLE1BQUk7d0JBQUNHLENBQUMsRUFBQyxrTEFBa0w7Ozs7OzRCQUFHOzs7Ozt3QkFDM0w7Ozs7O29CQUNKOzBCQUNOLDhEQUFDWixLQUFHO2dCQUFDRCxTQUFTLEVBQUMsS0FBSztnQkFBQ0UsT0FBTyxFQUFFOzJCQUFNSixZQUFZLENBQUNMLEVBQUUsQ0FBQztpQkFBQTswQkFDcEQsNEVBQUNhLEtBQUc7b0JBQUNDLEtBQUssRUFBQyw0QkFBNEI7b0JBQ3RDQyxLQUFLLEVBQUMsSUFBSTtvQkFDVkMsTUFBTSxFQUFDLElBQUk7b0JBQ1ZTLE9BQU8sRUFBQyxXQUFXOztzQ0FDakIsOERBQUNSLE1BQUk7NEJBQUNHLENBQUMsRUFBQyx3TkFBd047Ozs7O2dDQUFFO3NDQUNsTyw4REFBQ0gsTUFBSTs0QkFBRUcsQ0FBQyxFQUFDLGtMQUFrTDs7Ozs7Z0NBQUU7Ozs7Ozt3QkFDM0w7Ozs7O29CQUNBOztPQXREdUJwQixFQUFFOzs7O1lBdUQ5QixDQUNQO0NBQ0w7QUFuRXVCRCxLQUFBQSxJQUFJIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL2NvbXBvbmVudHMvVG9Eby5qcz8zMjI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBzdHlsZXMgZnJvbSBcIi4uL3N0eWxlcy9Ub2RvLm1vZHVsZS5jc3NcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFRvZG8oe1xyXG4gICAgaWQsXHJcbiAgICBoYW5kbGVDb21wbGV0ZSxcclxuICAgIGhhbmRsZURlbGV0ZSxcclxuICAgIHRvZG8sXHJcbiAgICBpc0RvbmUsXHJcbiAgICBoYW5kbGVVcGRhdGVcclxuXHJcbn0pIHtcclxuICAgIHJldHVybiAoXHJcbiAgICAgICAgPGxpIGNsYXNzTmFtZT17c3R5bGVzLnRvZG99IGtleT17aWR9PlxyXG4gICAgICAgICAgICA8ZGl2XHJcbiAgICAgICAgICAgICAgICBvbkNsaWNrPXsoKSA9PiBoYW5kbGVDb21wbGV0ZShpZCl9XHJcbiAgICAgICAgICAgICAgICBjbGFzc05hbWU9e3N0eWxlcy5jaGVja2JveENvbnRhaW5lcn1cclxuICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAge2lzRG9uZSA/IChcclxuICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT17c3R5bGVzLmNoZWNrYm94ICsgXCIgXCIgKyBzdHlsZXMuY2hlY2tlZH0+XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmdcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPVwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIxMVwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9XCI5XCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGhcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2U9XCIjRkZGXCJcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2VXaWR0aD1cIjJcIlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGQ9XCJNMSA0LjMwNEwzLjY5NiA3bDYtNlwiXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPlxyXG4gICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgICAgICAgICA8L2Rpdj5cclxuICAgICAgICAgICAgICAgICkgOiAoXHJcbiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9e3N0eWxlcy5jaGVja2JveH0+PC9kaXY+XHJcbiAgICAgICAgICAgICAgICApfVxyXG4gICAgICAgICAgICA8L2Rpdj5cclxuXHJcbiAgICAgICAgICAgIHtpc0RvbmUgPyAoXHJcbiAgICAgICAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgICAgICAgICA8cyBzdHlsZT17eyBvcGFjaXR5OiBcIjAuM1wiIH19Pnt0b2RvfTwvcz5cclxuICAgICAgICAgICAgICAgIDwvcD5cclxuICAgICAgICAgICAgKSA6IChcclxuICAgICAgICAgICAgICAgIDw+XHJcbiAgICAgICAgICAgICAgICBcclxuICAgICAgICAgICAgICAgICAgIDxwPnt0b2RvfTwvcD5cclxuICAgICAgICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICAgICA8Lz5cclxuICAgICAgICAgICAgKX1cclxuXHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuXCIgb25DbGljaz17KCkgPT4gaGFuZGxlRGVsZXRlKGlkKX0+XHJcbiAgICAgICAgICAgICAgICA8c3ZnXHJcbiAgICAgICAgICAgICAgICAgICAgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbiAgICAgICAgICAgICAgICAgICAgd2lkdGg9XCIyNlwiXHJcbiAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PVwiMjZcIlxyXG4gICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9XCIwIDAgMTYgMTZcIlxyXG4gICAgICAgICAgICAgICAgPlxyXG4gICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9XCJNMi4xNDYgMi44NTRhLjUuNSAwIDEgMSAuNzA4LS43MDhMOCA3LjI5M2w1LjE0Ni01LjE0N2EuNS41IDAgMCAxIC43MDguNzA4TDguNzA3IDhsNS4xNDcgNS4xNDZhLjUuNSAwIDAgMS0uNzA4LjcwOEw4IDguNzA3bC01LjE0NiA1LjE0N2EuNS41IDAgMCAxLS43MDgtLjcwOEw3LjI5MyA4IDIuMTQ2IDIuODU0WlwiIC8+XHJcbiAgICAgICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiYnRuXCIgb25DbGljaz17KCkgPT4gaGFuZGxlVXBkYXRlKGlkKX0+XHJcbiAgICAgICAgICAgIDxzdmcgeG1sbnM9XCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1wiXHJcbiAgICAgICAgICAgICB3aWR0aD1cIjE2XCIgXHJcbiAgICAgICAgICAgICBoZWlnaHQ9XCIxNlwiXHJcbiAgICAgICAgICAgICAgdmlld0JveD1cIjAgMCAxNiAxNlwiPlxyXG4gICAgICAgICAgICAgICAgPHBhdGggZD1cIk0xNS41MDIgMS45NGEuNS41IDAgMCAxIDAgLjcwNkwxNC40NTkgMy42OWwtMi0yTDEzLjUwMi42NDZhLjUuNSAwIDAgMSAuNzA3IDBsMS4yOTMgMS4yOTN6bS0xLjc1IDIuNDU2LTItMkw0LjkzOSA5LjIxYS41LjUgMCAwIDAtLjEyMS4xOTZsLS44MDUgMi40MTRhLjI1LjI1IDAgMCAwIC4zMTYuMzE2bDIuNDE0LS44MDVhLjUuNSAwIDAgMCAuMTk2LS4xMmw2LjgxMy02LjgxNHpcIi8+XHJcbiAgICAgICAgICAgICAgICA8cGF0aCAgZD1cIk0xIDEzLjVBMS41IDEuNSAwIDAgMCAyLjUgMTVoMTFhMS41IDEuNSAwIDAgMCAxLjUtMS41di02YS41LjUgMCAwIDAtMSAwdjZhLjUuNSAwIDAgMS0uNS41aC0xMWEuNS41IDAgMCAxLS41LS41di0xMWEuNS41IDAgMCAxIC41LS41SDlhLjUuNSAwIDAgMCAwLTFIMi41QTEuNSAxLjUgMCAwIDAgMSAyLjV2MTF6XCIvPlxyXG4gICAgICAgICAgICA8L3N2Zz5cclxuICAgICAgICAgICAgPC9kaXY+XHJcbiAgICAgICAgPC9saT5cclxuICAgICk7XHJcbn1cclxuIl0sIm5hbWVzIjpbInN0eWxlcyIsIlRvZG8iLCJpZCIsImhhbmRsZUNvbXBsZXRlIiwiaGFuZGxlRGVsZXRlIiwidG9kbyIsImlzRG9uZSIsImhhbmRsZVVwZGF0ZSIsImxpIiwiY2xhc3NOYW1lIiwiZGl2Iiwib25DbGljayIsImNoZWNrYm94Q29udGFpbmVyIiwiY2hlY2tib3giLCJjaGVja2VkIiwic3ZnIiwieG1sbnMiLCJ3aWR0aCIsImhlaWdodCIsInBhdGgiLCJzdHJva2UiLCJzdHJva2VXaWR0aCIsImQiLCJwIiwicyIsInN0eWxlIiwib3BhY2l0eSIsInZpZXdCb3giXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./components/ToDo.js\n"));

/***/ }),

/***/ "./pages/index.js":
/*!************************!*\
  !*** ./pages/index.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ Home; }\n/* harmony export */ });\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _components_ToDo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../components/ToDo */ \"./components/ToDo.js\");\n/* harmony import */ var _styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../styles/Todo.module.css */ \"./styles/Todo.module.css\");\n/* harmony import */ var _styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! next/head */ \"./node_modules/next/head.js\");\n/* harmony import */ var next_head__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(next_head__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! react-sortablejs */ \"./node_modules/react-sortablejs/dist/index.js\");\n/* harmony import */ var react_sortablejs__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(react_sortablejs__WEBPACK_IMPORTED_MODULE_4__);\n\n\n\n\n\n\n\nvar _s = $RefreshSig$();\nfunction Home() {\n    var _this = this;\n    _s();\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]), todoArray = ref[0], setTodoArray = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\"), input = ref1[0], setInput = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), todoInitialized = ref2[0], setTodoInitialized = ref2[1];\n    ////////////////////////////////\n    //updating todo\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), isEdit = ref3[0], setIsEdit = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1), id = ref4[0], setId = ref4[1];\n    /*\r\n    //fetch data from api\r\n    useEffect(() => {\r\n        if (!todoInitialized) {\r\n            fetch(\"http://127.0.0.1:8000/todo\")\r\n                .then((res) => {\r\n                    return res.json();\r\n                })\r\n                .then((data) => {\r\n                    setTodoArray(data);\r\n                })\r\n\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n        setTodoInitialized(true);\r\n    }, [todoInitialized]);\r\n    */ var handleInputChange = function(e) {\n        return setInput(e.target.value);\n    };\n    var handleAdd = function(e) {\n        e.preventDefault();\n        if (input) {\n            setTodoArray((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(todoArray).concat([\n                {\n                    id: todoArray.length + 1,\n                    todo: input,\n                    isDone: false\n                }, \n            ]));\n            setInput(\"\");\n        }\n        console.log(todoArray);\n    };\n    var handleComplete = function(itemID) {\n        todoArray.map(function(item) {\n            if (item.id === itemID) {\n                item.isDone = !item.isDone;\n            }\n        });\n        setTodoArray((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(todoArray));\n    };\n    var handleDelete = function(itemID) {\n        setTodoArray(todoArray.filter(function(item) {\n            return item.id !== itemID;\n        }));\n    };\n    var handleUpdate = function(itemID) {\n        //find item by id\n        //find item by id\n        var item = todoArray.find(function(item) {\n            return item.id === itemID;\n        });\n        //update item\n        console.log(item.todo);\n        setInput(item.todo);\n        setIsEdit(true);\n        setId(itemID);\n    //update todoArray\n    //setTodoArray([...todoArray]);\n    };\n    var handleUpdateAdd = function(e) {\n        e.preventDefault();\n        console.log(input);\n        //find item by id and update todo\n        todoArray.map(function(item) {\n            if (item.id === id) {\n                item.todo = input;\n            }\n        });\n        setTodoArray((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(todoArray));\n        setInput(\"\");\n        setIsEdit(false);\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.Fragment, {\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)((next_head__WEBPACK_IMPORTED_MODULE_3___default()), {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"title\", {\n                        children: \"Todo app with ThemeSwitch and localStorage | Next.js and react-sortablejs\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 98,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"keywords\",\n                        content: \"html, css, javaScript, theme, switch, nextjs, react-sortablejs, localStorage, frontend, mentor, react, todo, app, front, end\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 102,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"meta\", {\n                        name: \"description\",\n                        content: \"This todo app was created using nextjs, sass, react-sortablejs, and localStorage. Challenge by Frontend Mentor.\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 106,\n                        columnNumber: 17\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"link\", {\n                        rel: \"shortcut icon\",\n                        type: \"image/jpg\",\n                        href: \"/images/favicon-32x32.png\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 110,\n                        columnNumber: 17\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                lineNumber: 97,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    textAlign: \"center\"\n                },\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                        style: {\n                            fontSize: \"3rem\"\n                        },\n                        children: \"TODO\"\n                    }, void 0, false, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 122,\n                        columnNumber: 13\n                    }, this),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"form\", {\n                        onSubmit: isEdit ? handleUpdateAdd : handleAdd,\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"input\", {\n                                className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6___default().input),\n                                type: \"text\",\n                                placeholder: \"Create a new todo...\",\n                                \"aria-label\": \"Create a new todo...\",\n                                value: input,\n                                onChange: handleInputChange\n                            }, void 0, false, {\n                                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                                lineNumber: 124,\n                                columnNumber: 17\n                            }, this),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6___default().submit_btn),\n                                type: \"submit\",\n                                children: \"Submit\"\n                            }, void 0, false, {\n                                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                                lineNumber: 132,\n                                columnNumber: 17\n                            }, this)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                        lineNumber: 123,\n                        columnNumber: 13\n                    }, this)\n                ]\n            }, void 0, true, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                lineNumber: 117,\n                columnNumber: 13\n            }, this),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"ul\", {\n                className: (_styles_Todo_module_css__WEBPACK_IMPORTED_MODULE_6___default().container),\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(react_sortablejs__WEBPACK_IMPORTED_MODULE_4__.ReactSortable, {\n                    list: todoArray,\n                    setList: setTodoArray,\n                    delayOnTouchOnly: true,\n                    delay: 200,\n                    animation: 300,\n                    children: todoArray.map(function(item, id) {\n                        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_components_ToDo__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                            id: item.id,\n                            todo: item.todo,\n                            handleComplete: handleComplete,\n                            handleDelete: handleDelete,\n                            isDone: item.isDone,\n                            handleUpdate: handleUpdate\n                        }, id, false, {\n                            fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                            lineNumber: 147,\n                            columnNumber: 25\n                        }, _this);\n                    })\n                }, void 0, false, {\n                    fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                    lineNumber: 138,\n                    columnNumber: 13\n                }, this)\n            }, void 0, false, {\n                fileName: \"D:\\\\canabis\\\\Todo\\\\client\\\\pages\\\\index.js\",\n                lineNumber: 137,\n                columnNumber: 14\n            }, this)\n        ]\n    }, void 0, true);\n};\n_s(Home, \"oaDSBDMmbjR1ZNjI25r9Pk1rzr0=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");\n\n\n;\r\n    // Wrapped in an IIFE to avoid polluting the global scope\r\n    ;\r\n    (function () {\r\n        var _a, _b;\r\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\r\n        // to extract CSS. For backwards compatibility, we need to check we're in a\r\n        // browser context before continuing.\r\n        if (typeof self !== 'undefined' &&\r\n            // AMP / No-JS mode does not inject these helpers:\r\n            '$RefreshHelpers$' in self) {\r\n            // @ts-ignore __webpack_module__ is global\r\n            var currentExports = module.exports;\r\n            // @ts-ignore __webpack_module__ is global\r\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\r\n            // This cannot happen in MainTemplate because the exports mismatch between\r\n            // templating and execution.\r\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\r\n            // A module can be accepted automatically based on its exports, e.g. when\r\n            // it is a Refresh Boundary.\r\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\r\n                // Save the previous exports on update so we can compare the boundary\r\n                // signatures.\r\n                module.hot.dispose(function (data) {\r\n                    data.prevExports = currentExports;\r\n                });\r\n                // Unconditionally accept an update to this module, we'll check if it's\r\n                // still a Refresh Boundary later.\r\n                // @ts-ignore importMeta is replaced in the loader\r\n                module.hot.accept();\r\n                // This field is set when the previous version of this module was a\r\n                // Refresh Boundary, letting us know we need to check for invalidation or\r\n                // enqueue an update.\r\n                if (prevExports !== null) {\r\n                    // A boundary can become ineligible if its exports are incompatible\r\n                    // with the previous exports.\r\n                    //\r\n                    // For example, if you add/remove/change exports, we'll want to\r\n                    // re-execute the importing modules, and force those components to\r\n                    // re-render. Similarly, if you convert a class component to a\r\n                    // function, we want to invalidate the boundary.\r\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\r\n                        module.hot.invalidate();\r\n                    }\r\n                    else {\r\n                        self.$RefreshHelpers$.scheduleUpdate();\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // Since we just executed the code for the module, it's possible that the\r\n                // new exports made it ineligible for being a boundary.\r\n                // We only care about the case when we were _previously_ a boundary,\r\n                // because we already accepted this update (accidental side effect).\r\n                var isNoLongerABoundary = prevExports !== null;\r\n                if (isNoLongerABoundary) {\r\n                    module.hot.invalidate();\r\n                }\r\n            }\r\n        }\r\n    })();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./pages/index.js\n"));

/***/ }),

/***/ "./node_modules/react-sortablejs/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/react-sortablejs/dist/index.js ***!
  \*****************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("var $8zHUo$sortablejs = __webpack_require__(/*! sortablejs */ \"./node_modules/sortablejs/modular/sortable.esm.js\");\r\nvar $8zHUo$classnames = __webpack_require__(/*! classnames */ \"./node_modules/classnames/index.js\");\r\nvar $8zHUo$react = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\r\nvar $8zHUo$tinyinvariant = __webpack_require__(/*! tiny-invariant */ \"./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\");\r\n\r\nfunction $parcel$interopDefault(a) {\r\n  return a && a.__esModule ? a.default : a;\r\n}\r\nfunction $parcel$export(e, n, v, s) {\r\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\r\n}\r\nfunction $parcel$exportWildcard(dest, source) {\r\n  Object.keys(source).forEach(function(key) {\r\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\r\n      return;\r\n    }\r\n\r\n    Object.defineProperty(dest, key, {\r\n      enumerable: true,\r\n      get: function get() {\r\n        return source[key];\r\n      }\r\n    });\r\n  });\r\n\r\n  return dest;\r\n}\r\n\r\n$parcel$export(module.exports, \"Sortable\", () => $882b6d93070905b3$re_export$Sortable);\r\n$parcel$export(module.exports, \"Direction\", () => $882b6d93070905b3$re_export$Direction);\r\n$parcel$export(module.exports, \"DOMRect\", () => $882b6d93070905b3$re_export$DOMRect);\r\n$parcel$export(module.exports, \"GroupOptions\", () => $882b6d93070905b3$re_export$GroupOptions);\r\n$parcel$export(module.exports, \"MoveEvent\", () => $882b6d93070905b3$re_export$MoveEvent);\r\n$parcel$export(module.exports, \"Options\", () => $882b6d93070905b3$re_export$Options);\r\n$parcel$export(module.exports, \"PullResult\", () => $882b6d93070905b3$re_export$PullResult);\r\n$parcel$export(module.exports, \"PutResult\", () => $882b6d93070905b3$re_export$PutResult);\r\n$parcel$export(module.exports, \"SortableEvent\", () => $882b6d93070905b3$re_export$SortableEvent);\r\n$parcel$export(module.exports, \"SortableOptions\", () => $882b6d93070905b3$re_export$SortableOptions);\r\n$parcel$export(module.exports, \"Utils\", () => $882b6d93070905b3$re_export$Utils);\r\n$parcel$export(module.exports, \"ReactSortable\", () => $7fe8e3ea572bda7a$export$11bbed9ee0012c13);\r\n\r\n\r\n\r\n\r\n\r\nfunction $eb03e74f8f7db1f3$export$1d0aa160432dfea5(node) {\r\n    if (node.parentElement !== null) node.parentElement.removeChild(node);\r\n}\r\nfunction $eb03e74f8f7db1f3$export$6d240faa51aa562f(parent, newChild, index) {\r\n    const refChild = parent.children[index] || null;\r\n    parent.insertBefore(newChild, refChild);\r\n}\r\nfunction $eb03e74f8f7db1f3$export$d7d742816c28cf91(customs) {\r\n    $eb03e74f8f7db1f3$export$77f49a256021c8de(customs);\r\n    $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs);\r\n}\r\nfunction $eb03e74f8f7db1f3$export$77f49a256021c8de(customs) {\r\n    customs.forEach((curr)=>$eb03e74f8f7db1f3$export$1d0aa160432dfea5(curr.element));\r\n}\r\nfunction $eb03e74f8f7db1f3$export$a6177d5829f70ebc(customs) {\r\n    customs.forEach((curr)=>{\r\n        $eb03e74f8f7db1f3$export$6d240faa51aa562f(curr.parentElement, curr.element, curr.oldIndex);\r\n    });\r\n}\r\nfunction $eb03e74f8f7db1f3$export$4655efe700f887a(evt, list) {\r\n    const mode = $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt);\r\n    const parentElement = {\r\n        parentElement: evt.from\r\n    };\r\n    let custom = [];\r\n    switch(mode){\r\n        case \"normal\":\r\n            /* eslint-disable */ const item = {\r\n                element: evt.item,\r\n                newIndex: evt.newIndex,\r\n                oldIndex: evt.oldIndex,\r\n                parentElement: evt.from\r\n            };\r\n            custom = [\r\n                item\r\n            ];\r\n            break;\r\n        case \"swap\":\r\n            const drag = {\r\n                element: evt.item,\r\n                oldIndex: evt.oldIndex,\r\n                newIndex: evt.newIndex,\r\n                ...parentElement\r\n            };\r\n            const swap = {\r\n                element: evt.swapItem,\r\n                oldIndex: evt.newIndex,\r\n                newIndex: evt.oldIndex,\r\n                ...parentElement\r\n            };\r\n            custom = [\r\n                drag,\r\n                swap\r\n            ];\r\n            break;\r\n        case \"multidrag\":\r\n            custom = evt.oldIndicies.map((curr, index)=>({\r\n                    element: curr.multiDragElement,\r\n                    oldIndex: curr.index,\r\n                    newIndex: evt.newIndicies[index].index,\r\n                    ...parentElement\r\n                }));\r\n            break;\r\n    }\r\n    /* eslint-enable */ const customs = $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(custom, list);\r\n    return customs;\r\n}\r\nfunction $eb03e74f8f7db1f3$export$c25cf8080bd305ec(normalized, list) {\r\n    const a = $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list);\r\n    const b = $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, a);\r\n    return b;\r\n}\r\nfunction $eb03e74f8f7db1f3$export$be2da95e6167b0bd(normalized, list) {\r\n    const newList = [\r\n        ...list\r\n    ];\r\n    normalized.concat().reverse().forEach((curr)=>newList.splice(curr.oldIndex, 1));\r\n    return newList;\r\n}\r\nfunction $eb03e74f8f7db1f3$export$eca851ee65ae17e4(normalized, list, evt, clone) {\r\n    const newList = [\r\n        ...list\r\n    ];\r\n    normalized.forEach((curr)=>{\r\n        const newItem = clone && evt && clone(curr.item, evt);\r\n        newList.splice(curr.newIndex, 0, newItem || curr.item);\r\n    });\r\n    return newList;\r\n}\r\nfunction $eb03e74f8f7db1f3$export$1fc0f6205829e19c(evt) {\r\n    if (evt.oldIndicies && evt.oldIndicies.length > 0) return \"multidrag\";\r\n    if (evt.swapItem) return \"swap\";\r\n    return \"normal\";\r\n}\r\nfunction $eb03e74f8f7db1f3$export$bc06a3af7dc65f53(inputs, list) {\r\n    const normalized = inputs.map((curr)=>({\r\n            ...curr,\r\n            item: list[curr.oldIndex]\r\n        })).sort((a, b)=>a.oldIndex - b.oldIndex);\r\n    return normalized;\r\n}\r\nfunction $eb03e74f8f7db1f3$export$7553c81e62e31b7e(props) {\r\n    /* eslint-disable */ const { list: // react sortable props\r\n    list , setList: setList , children: children , tag: tag , style: style , className: className , clone: clone , onAdd: // sortable options that have methods we want to overwrite\r\n    onAdd , onChange: onChange , onChoose: onChoose , onClone: onClone , onEnd: onEnd , onFilter: onFilter , onRemove: onRemove , onSort: onSort , onStart: onStart , onUnchoose: onUnchoose , onUpdate: onUpdate , onMove: onMove , onSpill: onSpill , onSelect: onSelect , onDeselect: onDeselect , ...options } = props;\r\n    /* eslint-enable */ return options;\r\n}\r\n\r\n\r\n/** Holds a global reference for which react element is being dragged */ // @todo - use context to manage this. How does one use 2 different providers?\r\nconst $7fe8e3ea572bda7a$var$store = {\r\n    dragging: null\r\n};\r\nclass $7fe8e3ea572bda7a$export$11bbed9ee0012c13 extends (0, $8zHUo$react.Component) {\r\n    /* eslint-disable-next-line */ static defaultProps = {\r\n        clone: (item)=>item\r\n    };\r\n    constructor(props){\r\n        super(props);\r\n        // @todo forward ref this component\r\n        this.ref = /*#__PURE__*/ (0, $8zHUo$react.createRef)();\r\n        // make all state false because we can't change sortable unless a mouse gesture is made.\r\n        const newList = [\r\n            ...props.list\r\n        ].map((item)=>Object.assign(item, {\r\n                chosen: false,\r\n                selected: false\r\n            }));\r\n        props.setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n        (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(//@ts-expect-error: Doesn't exist. Will deprecate soon.\r\n        !props.plugins, `\r\nPlugins prop is no longer supported.\r\nInstead, mount it with \"Sortable.mount(new MultiDrag())\"\r\nPlease read the updated README.md at https://github.com/SortableJS/react-sortablejs.\r\n      `);\r\n    }\r\n    componentDidMount() {\r\n        if (this.ref.current === null) return;\r\n        const newOptions = this.makeOptions();\r\n        (0, ($parcel$interopDefault($8zHUo$sortablejs))).create(this.ref.current, newOptions);\r\n    }\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.disabled !== this.props.disabled && this.sortable) this.sortable.option(\"disabled\", this.props.disabled);\r\n    }\r\n    render() {\r\n        const { tag: tag , style: style , className: className , id: id  } = this.props;\r\n        const classicProps = {\r\n            style: style,\r\n            className: className,\r\n            id: id\r\n        };\r\n        // if no tag, default to a `div` element.\r\n        const newTag = !tag || tag === null ? \"div\" : tag;\r\n        return /*#__PURE__*/ (0, $8zHUo$react.createElement)(newTag, {\r\n            // @todo - find a way (perhaps with the callback) to allow AntD components to work\r\n            ref: this.ref,\r\n            ...classicProps\r\n        }, this.getChildren());\r\n    }\r\n    getChildren() {\r\n        const { children: children , dataIdAttr: dataIdAttr , selectedClass: selectedClass = \"sortable-selected\" , chosenClass: chosenClass = \"sortable-chosen\" , dragClass: /* eslint-disable */ dragClass = \"sortable-drag\" , fallbackClass: fallbackClass = \"sortable-falback\" , ghostClass: ghostClass = \"sortable-ghost\" , swapClass: swapClass = \"sortable-swap-highlight\" , filter: /* eslint-enable */ filter = \"sortable-filter\" , list: list ,  } = this.props;\r\n        // if no children, don't do anything.\r\n        if (!children || children == null) return null;\r\n        const dataid = dataIdAttr || \"data-id\";\r\n        /* eslint-disable-next-line */ return (0, $8zHUo$react.Children).map(children, (child, index)=>{\r\n            if (child === undefined) return undefined;\r\n            const item = list[index] || {};\r\n            const { className: prevClassName  } = child.props;\r\n            // @todo - handle the function if avalable. I don't think anyone will be doing this soon.\r\n            const filtered = typeof filter === \"string\" && {\r\n                [filter.replace(\".\", \"\")]: !!item.filtered\r\n            };\r\n            const className = (0, ($parcel$interopDefault($8zHUo$classnames)))(prevClassName, {\r\n                [selectedClass]: item.selected,\r\n                [chosenClass]: item.chosen,\r\n                ...filtered\r\n            });\r\n            return /*#__PURE__*/ (0, $8zHUo$react.cloneElement)(child, {\r\n                [dataid]: child.key,\r\n                className: className\r\n            });\r\n        });\r\n    }\r\n    /** Appends the `sortable` property to this component */ get sortable() {\r\n        const el = this.ref.current;\r\n        if (el === null) return null;\r\n        const key = Object.keys(el).find((k)=>k.includes(\"Sortable\"));\r\n        if (!key) return null;\r\n        //@ts-expect-error: fix me.\r\n        return el[key];\r\n    }\r\n    /** Converts all the props from `ReactSortable` into the `options` object that `Sortable.create(el, [options])` can use. */ makeOptions() {\r\n        const DOMHandlers = [\r\n            \"onAdd\",\r\n            \"onChoose\",\r\n            \"onDeselect\",\r\n            \"onEnd\",\r\n            \"onRemove\",\r\n            \"onSelect\",\r\n            \"onSpill\",\r\n            \"onStart\",\r\n            \"onUnchoose\",\r\n            \"onUpdate\", \r\n        ];\r\n        const NonDOMHandlers = [\r\n            \"onChange\",\r\n            \"onClone\",\r\n            \"onFilter\",\r\n            \"onSort\", \r\n        ];\r\n        const newOptions = (0, $eb03e74f8f7db1f3$export$7553c81e62e31b7e)(this.props);\r\n        DOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerPropAndDOM(name));\r\n        NonDOMHandlers.forEach((name)=>newOptions[name] = this.prepareOnHandlerProp(name));\r\n        /** onMove has 2 arguments and needs to be handled seperately. */ const onMove1 = (evt, originalEvt)=>{\r\n            const { onMove: onMove  } = this.props;\r\n            const defaultValue = evt.willInsertAfter || -1;\r\n            if (!onMove) return defaultValue;\r\n            const result = onMove(evt, originalEvt, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n            if (typeof result === \"undefined\") return false;\r\n            return result;\r\n        };\r\n        return {\r\n            ...newOptions,\r\n            onMove: onMove1\r\n        };\r\n    }\r\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop & an `on[Handler]` ReactSortable method.  */ prepareOnHandlerPropAndDOM(evtName) {\r\n        return (evt)=>{\r\n            // call the component prop\r\n            this.callOnHandlerProp(evt, evtName);\r\n            // calls state change\r\n            //@ts-expect-error: until @types multidrag item is in\r\n            this[evtName](evt);\r\n        };\r\n    }\r\n    /** Prepares a method that will be used in the sortable options to call an `on[Handler]` prop */ prepareOnHandlerProp(evtName) {\r\n        return (evt)=>{\r\n            // call the component prop\r\n            this.callOnHandlerProp(evt, evtName);\r\n        };\r\n    }\r\n    /** Calls the `props.on[Handler]` function */ callOnHandlerProp(evt, evtName) {\r\n        const propEvent = this.props[evtName];\r\n        if (propEvent) propEvent(evt, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    // SORTABLE DOM HANDLING\r\n    onAdd(evt) {\r\n        const { list: list , setList: setList , clone: clone  } = this.props;\r\n        /* eslint-disable-next-line */ const otherList = [\r\n            ...$7fe8e3ea572bda7a$var$store.dragging.props.list\r\n        ];\r\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, otherList);\r\n        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);\r\n        const newList = (0, $eb03e74f8f7db1f3$export$eca851ee65ae17e4)(customs, list, evt, clone).map((item)=>Object.assign(item, {\r\n                selected: false\r\n            }));\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onRemove(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const mode = (0, $eb03e74f8f7db1f3$export$1fc0f6205829e19c)(evt);\r\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);\r\n        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);\r\n        let newList = [\r\n            ...list\r\n        ];\r\n        // remove state if not in clone mode. otherwise, keep.\r\n        if (evt.pullMode !== \"clone\") newList = (0, $eb03e74f8f7db1f3$export$be2da95e6167b0bd)(customs, newList);\r\n        else {\r\n            // switch used to get the clone\r\n            let customClones = customs;\r\n            switch(mode){\r\n                case \"multidrag\":\r\n                    customClones = customs.map((item, index)=>({\r\n                            ...item,\r\n                            element: evt.clones[index]\r\n                        }));\r\n                    break;\r\n                case \"normal\":\r\n                    customClones = customs.map((item)=>({\r\n                            ...item,\r\n                            element: evt.clone\r\n                        }));\r\n                    break;\r\n                case \"swap\":\r\n                default:\r\n                    (0, ($parcel$interopDefault($8zHUo$tinyinvariant)))(true, `mode \"${mode}\" cannot clone. Please remove \"props.clone\" from <ReactSortable/> when using the \"${mode}\" plugin`);\r\n            }\r\n            (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customClones);\r\n            // replace selected items with cloned items\r\n            customs.forEach((curr)=>{\r\n                const index = curr.oldIndex;\r\n                /* eslint-disable-next-line */ const newItem = this.props.clone(curr.item, evt);\r\n                newList.splice(index, 1, newItem);\r\n            });\r\n        }\r\n        // remove item.selected from list\r\n        newList = newList.map((item)=>Object.assign(item, {\r\n                selected: false\r\n            }));\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onUpdate(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const customs = (0, $eb03e74f8f7db1f3$export$4655efe700f887a)(evt, list);\r\n        (0, $eb03e74f8f7db1f3$export$77f49a256021c8de)(customs);\r\n        (0, $eb03e74f8f7db1f3$export$a6177d5829f70ebc)(customs);\r\n        const newList = (0, $eb03e74f8f7db1f3$export$c25cf8080bd305ec)(customs, list);\r\n        return setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onStart() {\r\n        $7fe8e3ea572bda7a$var$store.dragging = this;\r\n    }\r\n    onEnd() {\r\n        $7fe8e3ea572bda7a$var$store.dragging = null;\r\n    }\r\n    onChoose(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const newList = list.map((item, index)=>{\r\n            let newItem = item;\r\n            if (index === evt.oldIndex) newItem = Object.assign(item, {\r\n                chosen: true\r\n            });\r\n            return newItem;\r\n        });\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onUnchoose(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const newList = list.map((item, index)=>{\r\n            let newItem = item;\r\n            if (index === evt.oldIndex) newItem = Object.assign(newItem, {\r\n                chosen: false\r\n            });\r\n            return newItem;\r\n        });\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onSpill(evt) {\r\n        const { removeOnSpill: removeOnSpill , revertOnSpill: revertOnSpill  } = this.props;\r\n        if (removeOnSpill && !revertOnSpill) (0, $eb03e74f8f7db1f3$export$1d0aa160432dfea5)(evt.item);\r\n    }\r\n    onSelect(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const newList = list.map((item)=>Object.assign(item, {\r\n                selected: false\r\n            }));\r\n        evt.newIndicies.forEach((curr)=>{\r\n            const index = curr.index;\r\n            if (index === -1) {\r\n                console.log(`\"${evt.type}\" had indice of \"${curr.index}\", which is probably -1 and doesn't usually happen here.`);\r\n                console.log(evt);\r\n                return;\r\n            }\r\n            newList[index].selected = true;\r\n        });\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n    onDeselect(evt) {\r\n        const { list: list , setList: setList  } = this.props;\r\n        const newList = list.map((item)=>Object.assign(item, {\r\n                selected: false\r\n            }));\r\n        evt.newIndicies.forEach((curr)=>{\r\n            const index = curr.index;\r\n            if (index === -1) return;\r\n            newList[index].selected = true;\r\n        });\r\n        setList(newList, this.sortable, $7fe8e3ea572bda7a$var$store);\r\n    }\r\n}\r\n\r\n\r\nvar $faefaad95e5fcca0$exports = {};\r\n\r\n\r\n$parcel$exportWildcard(module.exports, $faefaad95e5fcca0$exports);\r\n\r\n\r\n//# sourceMappingURL=index.js.map\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/react-sortablejs/dist/index.js\n"));

/***/ }),

/***/ "./node_modules/sortablejs/modular/sortable.esm.js":
/*!*********************************************************!*\
  !*** ./node_modules/sortablejs/modular/sortable.esm.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MultiDrag\": function() { return /* binding */ MultiDragPlugin; },\n/* harmony export */   \"Sortable\": function() { return /* binding */ Sortable; },\n/* harmony export */   \"Swap\": function() { return /* binding */ SwapPlugin; }\n/* harmony export */ });\n/**!\r\n * Sortable 1.15.0\r\n * @author\tRubaXa   <trash@rubaxa.org>\r\n * @author\towenm    <owen23355@gmail.com>\r\n * @license MIT\r\n */\r\nfunction ownKeys(object, enumerableOnly) {\r\n  var keys = Object.keys(object);\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var symbols = Object.getOwnPropertySymbols(object);\r\n\r\n    if (enumerableOnly) {\r\n      symbols = symbols.filter(function (sym) {\r\n        return Object.getOwnPropertyDescriptor(object, sym).enumerable;\r\n      });\r\n    }\r\n\r\n    keys.push.apply(keys, symbols);\r\n  }\r\n\r\n  return keys;\r\n}\r\n\r\nfunction _objectSpread2(target) {\r\n  for (var i = 1; i < arguments.length; i++) {\r\n    var source = arguments[i] != null ? arguments[i] : {};\r\n\r\n    if (i % 2) {\r\n      ownKeys(Object(source), true).forEach(function (key) {\r\n        _defineProperty(target, key, source[key]);\r\n      });\r\n    } else if (Object.getOwnPropertyDescriptors) {\r\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\r\n    } else {\r\n      ownKeys(Object(source)).forEach(function (key) {\r\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\r\n      });\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _typeof(obj) {\r\n  \"@babel/helpers - typeof\";\r\n\r\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\r\n    _typeof = function (obj) {\r\n      return typeof obj;\r\n    };\r\n  } else {\r\n    _typeof = function (obj) {\r\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\r\n    };\r\n  }\r\n\r\n  return _typeof(obj);\r\n}\r\n\r\nfunction _defineProperty(obj, key, value) {\r\n  if (key in obj) {\r\n    Object.defineProperty(obj, key, {\r\n      value: value,\r\n      enumerable: true,\r\n      configurable: true,\r\n      writable: true\r\n    });\r\n  } else {\r\n    obj[key] = value;\r\n  }\r\n\r\n  return obj;\r\n}\r\n\r\nfunction _extends() {\r\n  _extends = Object.assign || function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    return target;\r\n  };\r\n\r\n  return _extends.apply(this, arguments);\r\n}\r\n\r\nfunction _objectWithoutPropertiesLoose(source, excluded) {\r\n  if (source == null) return {};\r\n  var target = {};\r\n  var sourceKeys = Object.keys(source);\r\n  var key, i;\r\n\r\n  for (i = 0; i < sourceKeys.length; i++) {\r\n    key = sourceKeys[i];\r\n    if (excluded.indexOf(key) >= 0) continue;\r\n    target[key] = source[key];\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _objectWithoutProperties(source, excluded) {\r\n  if (source == null) return {};\r\n\r\n  var target = _objectWithoutPropertiesLoose(source, excluded);\r\n\r\n  var key, i;\r\n\r\n  if (Object.getOwnPropertySymbols) {\r\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\r\n\r\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\r\n      key = sourceSymbolKeys[i];\r\n      if (excluded.indexOf(key) >= 0) continue;\r\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\r\n      target[key] = source[key];\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\r\n}\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\r\n}\r\n\r\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\r\n}\r\n\r\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n\r\n  return arr2;\r\n}\r\n\r\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n\r\nvar version = \"1.15.0\";\r\n\r\nfunction userAgent(pattern) {\r\n  if (typeof window !== 'undefined' && window.navigator) {\r\n    return !! /*@__PURE__*/navigator.userAgent.match(pattern);\r\n  }\r\n}\r\n\r\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\r\nvar Edge = userAgent(/Edge/i);\r\nvar FireFox = userAgent(/firefox/i);\r\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\r\nvar IOS = userAgent(/iP(ad|od|hone)/i);\r\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\r\n\r\nvar captureMode = {\r\n  capture: false,\r\n  passive: false\r\n};\r\n\r\nfunction on(el, event, fn) {\r\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\r\n}\r\n\r\nfunction off(el, event, fn) {\r\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\r\n}\r\n\r\nfunction matches(\r\n/**HTMLElement*/\r\nel,\r\n/**String*/\r\nselector) {\r\n  if (!selector) return;\r\n  selector[0] === '>' && (selector = selector.substring(1));\r\n\r\n  if (el) {\r\n    try {\r\n      if (el.matches) {\r\n        return el.matches(selector);\r\n      } else if (el.msMatchesSelector) {\r\n        return el.msMatchesSelector(selector);\r\n      } else if (el.webkitMatchesSelector) {\r\n        return el.webkitMatchesSelector(selector);\r\n      }\r\n    } catch (_) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nfunction getParentOrHost(el) {\r\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\r\n}\r\n\r\nfunction closest(\r\n/**HTMLElement*/\r\nel,\r\n/**String*/\r\nselector,\r\n/**HTMLElement*/\r\nctx, includeCTX) {\r\n  if (el) {\r\n    ctx = ctx || document;\r\n\r\n    do {\r\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\r\n        return el;\r\n      }\r\n\r\n      if (el === ctx) break;\r\n      /* jshint boss:true */\r\n    } while (el = getParentOrHost(el));\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\nvar R_SPACE = /\\s+/g;\r\n\r\nfunction toggleClass(el, name, state) {\r\n  if (el && name) {\r\n    if (el.classList) {\r\n      el.classList[state ? 'add' : 'remove'](name);\r\n    } else {\r\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\r\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\r\n    }\r\n  }\r\n}\r\n\r\nfunction css(el, prop, val) {\r\n  var style = el && el.style;\r\n\r\n  if (style) {\r\n    if (val === void 0) {\r\n      if (document.defaultView && document.defaultView.getComputedStyle) {\r\n        val = document.defaultView.getComputedStyle(el, '');\r\n      } else if (el.currentStyle) {\r\n        val = el.currentStyle;\r\n      }\r\n\r\n      return prop === void 0 ? val : val[prop];\r\n    } else {\r\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\r\n        prop = '-webkit-' + prop;\r\n      }\r\n\r\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\r\n    }\r\n  }\r\n}\r\n\r\nfunction matrix(el, selfOnly) {\r\n  var appliedTransforms = '';\r\n\r\n  if (typeof el === 'string') {\r\n    appliedTransforms = el;\r\n  } else {\r\n    do {\r\n      var transform = css(el, 'transform');\r\n\r\n      if (transform && transform !== 'none') {\r\n        appliedTransforms = transform + ' ' + appliedTransforms;\r\n      }\r\n      /* jshint boss:true */\r\n\r\n    } while (!selfOnly && (el = el.parentNode));\r\n  }\r\n\r\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\r\n  /*jshint -W056 */\r\n\r\n  return matrixFn && new matrixFn(appliedTransforms);\r\n}\r\n\r\nfunction find(ctx, tagName, iterator) {\r\n  if (ctx) {\r\n    var list = ctx.getElementsByTagName(tagName),\r\n        i = 0,\r\n        n = list.length;\r\n\r\n    if (iterator) {\r\n      for (; i < n; i++) {\r\n        iterator(list[i], i);\r\n      }\r\n    }\r\n\r\n    return list;\r\n  }\r\n\r\n  return [];\r\n}\r\n\r\nfunction getWindowScrollingElement() {\r\n  var scrollingElement = document.scrollingElement;\r\n\r\n  if (scrollingElement) {\r\n    return scrollingElement;\r\n  } else {\r\n    return document.documentElement;\r\n  }\r\n}\r\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\r\n\r\n\r\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\r\n  if (!el.getBoundingClientRect && el !== window) return;\r\n  var elRect, top, left, bottom, right, height, width;\r\n\r\n  if (el !== window && el.parentNode && el !== getWindowScrollingElement()) {\r\n    elRect = el.getBoundingClientRect();\r\n    top = elRect.top;\r\n    left = elRect.left;\r\n    bottom = elRect.bottom;\r\n    right = elRect.right;\r\n    height = elRect.height;\r\n    width = elRect.width;\r\n  } else {\r\n    top = 0;\r\n    left = 0;\r\n    bottom = window.innerHeight;\r\n    right = window.innerWidth;\r\n    height = window.innerHeight;\r\n    width = window.innerWidth;\r\n  }\r\n\r\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\r\n    // Adjust for translate()\r\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\r\n    // Not needed on <= IE11\r\n\r\n    if (!IE11OrLess) {\r\n      do {\r\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\r\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\r\n\r\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\r\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\r\n          bottom = top + elRect.height;\r\n          right = left + elRect.width;\r\n          break;\r\n        }\r\n        /* jshint boss:true */\r\n\r\n      } while (container = container.parentNode);\r\n    }\r\n  }\r\n\r\n  if (undoScale && el !== window) {\r\n    // Adjust for scale()\r\n    var elMatrix = matrix(container || el),\r\n        scaleX = elMatrix && elMatrix.a,\r\n        scaleY = elMatrix && elMatrix.d;\r\n\r\n    if (elMatrix) {\r\n      top /= scaleY;\r\n      left /= scaleX;\r\n      width /= scaleX;\r\n      height /= scaleY;\r\n      bottom = top + height;\r\n      right = left + width;\r\n    }\r\n  }\r\n\r\n  return {\r\n    top: top,\r\n    left: left,\r\n    bottom: bottom,\r\n    right: right,\r\n    width: width,\r\n    height: height\r\n  };\r\n}\r\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\r\n\r\n\r\nfunction isScrolledPast(el, elSide, parentSide) {\r\n  var parent = getParentAutoScrollElement(el, true),\r\n      elSideVal = getRect(el)[elSide];\r\n  /* jshint boss:true */\r\n\r\n  while (parent) {\r\n    var parentSideVal = getRect(parent)[parentSide],\r\n        visible = void 0;\r\n\r\n    if (parentSide === 'top' || parentSide === 'left') {\r\n      visible = elSideVal >= parentSideVal;\r\n    } else {\r\n      visible = elSideVal <= parentSideVal;\r\n    }\r\n\r\n    if (!visible) return parent;\r\n    if (parent === getWindowScrollingElement()) break;\r\n    parent = getParentAutoScrollElement(parent, false);\r\n  }\r\n\r\n  return false;\r\n}\r\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\r\n\r\n\r\nfunction getChild(el, childNum, options, includeDragEl) {\r\n  var currentChild = 0,\r\n      i = 0,\r\n      children = el.children;\r\n\r\n  while (i < children.length) {\r\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && (includeDragEl || children[i] !== Sortable.dragged) && closest(children[i], options.draggable, el, false)) {\r\n      if (currentChild === childNum) {\r\n        return children[i];\r\n      }\r\n\r\n      currentChild++;\r\n    }\r\n\r\n    i++;\r\n  }\r\n\r\n  return null;\r\n}\r\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\r\n\r\n\r\nfunction lastChild(el, selector) {\r\n  var last = el.lastElementChild;\r\n\r\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\r\n    last = last.previousElementSibling;\r\n  }\r\n\r\n  return last || null;\r\n}\r\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\r\n\r\n\r\nfunction index(el, selector) {\r\n  var index = 0;\r\n\r\n  if (!el || !el.parentNode) {\r\n    return -1;\r\n  }\r\n  /* jshint boss:true */\r\n\r\n\r\n  while (el = el.previousElementSibling) {\r\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\r\n      index++;\r\n    }\r\n  }\r\n\r\n  return index;\r\n}\r\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\r\n\r\n\r\nfunction getRelativeScrollOffset(el) {\r\n  var offsetLeft = 0,\r\n      offsetTop = 0,\r\n      winScroller = getWindowScrollingElement();\r\n\r\n  if (el) {\r\n    do {\r\n      var elMatrix = matrix(el),\r\n          scaleX = elMatrix.a,\r\n          scaleY = elMatrix.d;\r\n      offsetLeft += el.scrollLeft * scaleX;\r\n      offsetTop += el.scrollTop * scaleY;\r\n    } while (el !== winScroller && (el = el.parentNode));\r\n  }\r\n\r\n  return [offsetLeft, offsetTop];\r\n}\r\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\r\n\r\n\r\nfunction indexOfObject(arr, obj) {\r\n  for (var i in arr) {\r\n    if (!arr.hasOwnProperty(i)) continue;\r\n\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\r\n    }\r\n  }\r\n\r\n  return -1;\r\n}\r\n\r\nfunction getParentAutoScrollElement(el, includeSelf) {\r\n  // skip to window\r\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\r\n  var elem = el;\r\n  var gotSelf = false;\r\n\r\n  do {\r\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\r\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\r\n      var elemCSS = css(elem);\r\n\r\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\r\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\r\n        if (gotSelf || includeSelf) return elem;\r\n        gotSelf = true;\r\n      }\r\n    }\r\n    /* jshint boss:true */\r\n\r\n  } while (elem = elem.parentNode);\r\n\r\n  return getWindowScrollingElement();\r\n}\r\n\r\nfunction extend(dst, src) {\r\n  if (dst && src) {\r\n    for (var key in src) {\r\n      if (src.hasOwnProperty(key)) {\r\n        dst[key] = src[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  return dst;\r\n}\r\n\r\nfunction isRectEqual(rect1, rect2) {\r\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\r\n}\r\n\r\nvar _throttleTimeout;\r\n\r\nfunction throttle(callback, ms) {\r\n  return function () {\r\n    if (!_throttleTimeout) {\r\n      var args = arguments,\r\n          _this = this;\r\n\r\n      if (args.length === 1) {\r\n        callback.call(_this, args[0]);\r\n      } else {\r\n        callback.apply(_this, args);\r\n      }\r\n\r\n      _throttleTimeout = setTimeout(function () {\r\n        _throttleTimeout = void 0;\r\n      }, ms);\r\n    }\r\n  };\r\n}\r\n\r\nfunction cancelThrottle() {\r\n  clearTimeout(_throttleTimeout);\r\n  _throttleTimeout = void 0;\r\n}\r\n\r\nfunction scrollBy(el, x, y) {\r\n  el.scrollLeft += x;\r\n  el.scrollTop += y;\r\n}\r\n\r\nfunction clone(el) {\r\n  var Polymer = window.Polymer;\r\n  var $ = window.jQuery || window.Zepto;\r\n\r\n  if (Polymer && Polymer.dom) {\r\n    return Polymer.dom(el).cloneNode(true);\r\n  } else if ($) {\r\n    return $(el).clone(true)[0];\r\n  } else {\r\n    return el.cloneNode(true);\r\n  }\r\n}\r\n\r\nfunction setRect(el, rect) {\r\n  css(el, 'position', 'absolute');\r\n  css(el, 'top', rect.top);\r\n  css(el, 'left', rect.left);\r\n  css(el, 'width', rect.width);\r\n  css(el, 'height', rect.height);\r\n}\r\n\r\nfunction unsetRect(el) {\r\n  css(el, 'position', '');\r\n  css(el, 'top', '');\r\n  css(el, 'left', '');\r\n  css(el, 'width', '');\r\n  css(el, 'height', '');\r\n}\r\n\r\nvar expando = 'Sortable' + new Date().getTime();\r\n\r\nfunction AnimationStateManager() {\r\n  var animationStates = [],\r\n      animationCallbackId;\r\n  return {\r\n    captureAnimationState: function captureAnimationState() {\r\n      animationStates = [];\r\n      if (!this.options.animation) return;\r\n      var children = [].slice.call(this.el.children);\r\n      children.forEach(function (child) {\r\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\r\n        animationStates.push({\r\n          target: child,\r\n          rect: getRect(child)\r\n        });\r\n\r\n        var fromRect = _objectSpread2({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\r\n\r\n\r\n        if (child.thisAnimationDuration) {\r\n          var childMatrix = matrix(child, true);\r\n\r\n          if (childMatrix) {\r\n            fromRect.top -= childMatrix.f;\r\n            fromRect.left -= childMatrix.e;\r\n          }\r\n        }\r\n\r\n        child.fromRect = fromRect;\r\n      });\r\n    },\r\n    addAnimationState: function addAnimationState(state) {\r\n      animationStates.push(state);\r\n    },\r\n    removeAnimationState: function removeAnimationState(target) {\r\n      animationStates.splice(indexOfObject(animationStates, {\r\n        target: target\r\n      }), 1);\r\n    },\r\n    animateAll: function animateAll(callback) {\r\n      var _this = this;\r\n\r\n      if (!this.options.animation) {\r\n        clearTimeout(animationCallbackId);\r\n        if (typeof callback === 'function') callback();\r\n        return;\r\n      }\r\n\r\n      var animating = false,\r\n          animationTime = 0;\r\n      animationStates.forEach(function (state) {\r\n        var time = 0,\r\n            target = state.target,\r\n            fromRect = target.fromRect,\r\n            toRect = getRect(target),\r\n            prevFromRect = target.prevFromRect,\r\n            prevToRect = target.prevToRect,\r\n            animatingRect = state.rect,\r\n            targetMatrix = matrix(target, true);\r\n\r\n        if (targetMatrix) {\r\n          // Compensate for current animation\r\n          toRect.top -= targetMatrix.f;\r\n          toRect.left -= targetMatrix.e;\r\n        }\r\n\r\n        target.toRect = toRect;\r\n\r\n        if (target.thisAnimationDuration) {\r\n          // Could also check if animatingRect is between fromRect and toRect\r\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\r\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\r\n            // If returning to same place as started from animation and on same axis\r\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\r\n          }\r\n        } // if fromRect != toRect: animate\r\n\r\n\r\n        if (!isRectEqual(toRect, fromRect)) {\r\n          target.prevFromRect = fromRect;\r\n          target.prevToRect = toRect;\r\n\r\n          if (!time) {\r\n            time = _this.options.animation;\r\n          }\r\n\r\n          _this.animate(target, animatingRect, toRect, time);\r\n        }\r\n\r\n        if (time) {\r\n          animating = true;\r\n          animationTime = Math.max(animationTime, time);\r\n          clearTimeout(target.animationResetTimer);\r\n          target.animationResetTimer = setTimeout(function () {\r\n            target.animationTime = 0;\r\n            target.prevFromRect = null;\r\n            target.fromRect = null;\r\n            target.prevToRect = null;\r\n            target.thisAnimationDuration = null;\r\n          }, time);\r\n          target.thisAnimationDuration = time;\r\n        }\r\n      });\r\n      clearTimeout(animationCallbackId);\r\n\r\n      if (!animating) {\r\n        if (typeof callback === 'function') callback();\r\n      } else {\r\n        animationCallbackId = setTimeout(function () {\r\n          if (typeof callback === 'function') callback();\r\n        }, animationTime);\r\n      }\r\n\r\n      animationStates = [];\r\n    },\r\n    animate: function animate(target, currentRect, toRect, duration) {\r\n      if (duration) {\r\n        css(target, 'transition', '');\r\n        css(target, 'transform', '');\r\n        var elMatrix = matrix(this.el),\r\n            scaleX = elMatrix && elMatrix.a,\r\n            scaleY = elMatrix && elMatrix.d,\r\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\r\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\r\n        target.animatingX = !!translateX;\r\n        target.animatingY = !!translateY;\r\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\r\n        this.forRepaintDummy = repaint(target); // repaint\r\n\r\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\r\n        css(target, 'transform', 'translate3d(0,0,0)');\r\n        typeof target.animated === 'number' && clearTimeout(target.animated);\r\n        target.animated = setTimeout(function () {\r\n          css(target, 'transition', '');\r\n          css(target, 'transform', '');\r\n          target.animated = false;\r\n          target.animatingX = false;\r\n          target.animatingY = false;\r\n        }, duration);\r\n      }\r\n    }\r\n  };\r\n}\r\n\r\nfunction repaint(target) {\r\n  return target.offsetWidth;\r\n}\r\n\r\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\r\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\r\n}\r\n\r\nvar plugins = [];\r\nvar defaults = {\r\n  initializeByDefault: true\r\n};\r\nvar PluginManager = {\r\n  mount: function mount(plugin) {\r\n    // Set default static properties\r\n    for (var option in defaults) {\r\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\r\n        plugin[option] = defaults[option];\r\n      }\r\n    }\r\n\r\n    plugins.forEach(function (p) {\r\n      if (p.pluginName === plugin.pluginName) {\r\n        throw \"Sortable: Cannot mount plugin \".concat(plugin.pluginName, \" more than once\");\r\n      }\r\n    });\r\n    plugins.push(plugin);\r\n  },\r\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\r\n    var _this = this;\r\n\r\n    this.eventCanceled = false;\r\n\r\n    evt.cancel = function () {\r\n      _this.eventCanceled = true;\r\n    };\r\n\r\n    var eventNameGlobal = eventName + 'Global';\r\n    plugins.forEach(function (plugin) {\r\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\r\n\r\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\r\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread2({\r\n          sortable: sortable\r\n        }, evt));\r\n      } // Only fire plugin event if plugin is enabled in this sortable,\r\n      // and plugin has event defined\r\n\r\n\r\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\r\n        sortable[plugin.pluginName][eventName](_objectSpread2({\r\n          sortable: sortable\r\n        }, evt));\r\n      }\r\n    });\r\n  },\r\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\r\n    plugins.forEach(function (plugin) {\r\n      var pluginName = plugin.pluginName;\r\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\r\n      var initialized = new plugin(sortable, el, sortable.options);\r\n      initialized.sortable = sortable;\r\n      initialized.options = sortable.options;\r\n      sortable[pluginName] = initialized; // Add default options from plugin\r\n\r\n      _extends(defaults, initialized.defaults);\r\n    });\r\n\r\n    for (var option in sortable.options) {\r\n      if (!sortable.options.hasOwnProperty(option)) continue;\r\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\r\n\r\n      if (typeof modified !== 'undefined') {\r\n        sortable.options[option] = modified;\r\n      }\r\n    }\r\n  },\r\n  getEventProperties: function getEventProperties(name, sortable) {\r\n    var eventProperties = {};\r\n    plugins.forEach(function (plugin) {\r\n      if (typeof plugin.eventProperties !== 'function') return;\r\n\r\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\r\n    });\r\n    return eventProperties;\r\n  },\r\n  modifyOption: function modifyOption(sortable, name, value) {\r\n    var modifiedValue;\r\n    plugins.forEach(function (plugin) {\r\n      // Plugin must exist on the Sortable\r\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\r\n\r\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\r\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\r\n      }\r\n    });\r\n    return modifiedValue;\r\n  }\r\n};\r\n\r\nfunction dispatchEvent(_ref) {\r\n  var sortable = _ref.sortable,\r\n      rootEl = _ref.rootEl,\r\n      name = _ref.name,\r\n      targetEl = _ref.targetEl,\r\n      cloneEl = _ref.cloneEl,\r\n      toEl = _ref.toEl,\r\n      fromEl = _ref.fromEl,\r\n      oldIndex = _ref.oldIndex,\r\n      newIndex = _ref.newIndex,\r\n      oldDraggableIndex = _ref.oldDraggableIndex,\r\n      newDraggableIndex = _ref.newDraggableIndex,\r\n      originalEvent = _ref.originalEvent,\r\n      putSortable = _ref.putSortable,\r\n      extraEventProperties = _ref.extraEventProperties;\r\n  sortable = sortable || rootEl && rootEl[expando];\r\n  if (!sortable) return;\r\n  var evt,\r\n      options = sortable.options,\r\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\r\n\r\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\r\n    evt = new CustomEvent(name, {\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n  } else {\r\n    evt = document.createEvent('Event');\r\n    evt.initEvent(name, true, true);\r\n  }\r\n\r\n  evt.to = toEl || rootEl;\r\n  evt.from = fromEl || rootEl;\r\n  evt.item = targetEl || rootEl;\r\n  evt.clone = cloneEl;\r\n  evt.oldIndex = oldIndex;\r\n  evt.newIndex = newIndex;\r\n  evt.oldDraggableIndex = oldDraggableIndex;\r\n  evt.newDraggableIndex = newDraggableIndex;\r\n  evt.originalEvent = originalEvent;\r\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\r\n\r\n  var allEventProperties = _objectSpread2(_objectSpread2({}, extraEventProperties), PluginManager.getEventProperties(name, sortable));\r\n\r\n  for (var option in allEventProperties) {\r\n    evt[option] = allEventProperties[option];\r\n  }\r\n\r\n  if (rootEl) {\r\n    rootEl.dispatchEvent(evt);\r\n  }\r\n\r\n  if (options[onName]) {\r\n    options[onName].call(sortable, evt);\r\n  }\r\n}\r\n\r\nvar _excluded = [\"evt\"];\r\n\r\nvar pluginEvent = function pluginEvent(eventName, sortable) {\r\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\r\n      originalEvent = _ref.evt,\r\n      data = _objectWithoutProperties(_ref, _excluded);\r\n\r\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread2({\r\n    dragEl: dragEl,\r\n    parentEl: parentEl,\r\n    ghostEl: ghostEl,\r\n    rootEl: rootEl,\r\n    nextEl: nextEl,\r\n    lastDownEl: lastDownEl,\r\n    cloneEl: cloneEl,\r\n    cloneHidden: cloneHidden,\r\n    dragStarted: moved,\r\n    putSortable: putSortable,\r\n    activeSortable: Sortable.active,\r\n    originalEvent: originalEvent,\r\n    oldIndex: oldIndex,\r\n    oldDraggableIndex: oldDraggableIndex,\r\n    newIndex: newIndex,\r\n    newDraggableIndex: newDraggableIndex,\r\n    hideGhostForTarget: _hideGhostForTarget,\r\n    unhideGhostForTarget: _unhideGhostForTarget,\r\n    cloneNowHidden: function cloneNowHidden() {\r\n      cloneHidden = true;\r\n    },\r\n    cloneNowShown: function cloneNowShown() {\r\n      cloneHidden = false;\r\n    },\r\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\r\n      _dispatchEvent({\r\n        sortable: sortable,\r\n        name: name,\r\n        originalEvent: originalEvent\r\n      });\r\n    }\r\n  }, data));\r\n};\r\n\r\nfunction _dispatchEvent(info) {\r\n  dispatchEvent(_objectSpread2({\r\n    putSortable: putSortable,\r\n    cloneEl: cloneEl,\r\n    targetEl: dragEl,\r\n    rootEl: rootEl,\r\n    oldIndex: oldIndex,\r\n    oldDraggableIndex: oldDraggableIndex,\r\n    newIndex: newIndex,\r\n    newDraggableIndex: newDraggableIndex\r\n  }, info));\r\n}\r\n\r\nvar dragEl,\r\n    parentEl,\r\n    ghostEl,\r\n    rootEl,\r\n    nextEl,\r\n    lastDownEl,\r\n    cloneEl,\r\n    cloneHidden,\r\n    oldIndex,\r\n    newIndex,\r\n    oldDraggableIndex,\r\n    newDraggableIndex,\r\n    activeGroup,\r\n    putSortable,\r\n    awaitingDragStarted = false,\r\n    ignoreNextClick = false,\r\n    sortables = [],\r\n    tapEvt,\r\n    touchEvt,\r\n    lastDx,\r\n    lastDy,\r\n    tapDistanceLeft,\r\n    tapDistanceTop,\r\n    moved,\r\n    lastTarget,\r\n    lastDirection,\r\n    pastFirstInvertThresh = false,\r\n    isCircumstantialInvert = false,\r\n    targetMoveDistance,\r\n    // For positioning ghost absolutely\r\nghostRelativeParent,\r\n    ghostRelativeParentInitialScroll = [],\r\n    // (left, top)\r\n_silent = false,\r\n    savedInputChecked = [];\r\n/** @const */\r\n\r\nvar documentExists = typeof document !== 'undefined',\r\n    PositionGhostAbsolutely = IOS,\r\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\r\n    // This will not pass for IE9, because IE9 DnD only works on anchors\r\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\r\n    supportCssPointerEvents = function () {\r\n  if (!documentExists) return; // false when <= IE11\r\n\r\n  if (IE11OrLess) {\r\n    return false;\r\n  }\r\n\r\n  var el = document.createElement('x');\r\n  el.style.cssText = 'pointer-events:auto';\r\n  return el.style.pointerEvents === 'auto';\r\n}(),\r\n    _detectDirection = function _detectDirection(el, options) {\r\n  var elCSS = css(el),\r\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\r\n      child1 = getChild(el, 0, options),\r\n      child2 = getChild(el, 1, options),\r\n      firstChildCSS = child1 && css(child1),\r\n      secondChildCSS = child2 && css(child2),\r\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\r\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\r\n\r\n  if (elCSS.display === 'flex') {\r\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\r\n  }\r\n\r\n  if (elCSS.display === 'grid') {\r\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\r\n  }\r\n\r\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\r\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\r\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\r\n  }\r\n\r\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\r\n},\r\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\r\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\r\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\r\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\r\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\r\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\r\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\r\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\r\n},\r\n\r\n/**\r\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\r\n * @param  {Number} x      X position\r\n * @param  {Number} y      Y position\r\n * @return {HTMLElement}   Element of the first found nearest Sortable\r\n */\r\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\r\n  var ret;\r\n  sortables.some(function (sortable) {\r\n    var threshold = sortable[expando].options.emptyInsertThreshold;\r\n    if (!threshold || lastChild(sortable)) return;\r\n    var rect = getRect(sortable),\r\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\r\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\r\n\r\n    if (insideHorizontally && insideVertically) {\r\n      return ret = sortable;\r\n    }\r\n  });\r\n  return ret;\r\n},\r\n    _prepareGroup = function _prepareGroup(options) {\r\n  function toFn(value, pull) {\r\n    return function (to, from, dragEl, evt) {\r\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\r\n\r\n      if (value == null && (pull || sameGroup)) {\r\n        // Default pull value\r\n        // Default pull and put value if same group\r\n        return true;\r\n      } else if (value == null || value === false) {\r\n        return false;\r\n      } else if (pull && value === 'clone') {\r\n        return value;\r\n      } else if (typeof value === 'function') {\r\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\r\n      } else {\r\n        var otherGroup = (pull ? to : from).options.group.name;\r\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\r\n      }\r\n    };\r\n  }\r\n\r\n  var group = {};\r\n  var originalGroup = options.group;\r\n\r\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\r\n    originalGroup = {\r\n      name: originalGroup\r\n    };\r\n  }\r\n\r\n  group.name = originalGroup.name;\r\n  group.checkPull = toFn(originalGroup.pull, true);\r\n  group.checkPut = toFn(originalGroup.put);\r\n  group.revertClone = originalGroup.revertClone;\r\n  options.group = group;\r\n},\r\n    _hideGhostForTarget = function _hideGhostForTarget() {\r\n  if (!supportCssPointerEvents && ghostEl) {\r\n    css(ghostEl, 'display', 'none');\r\n  }\r\n},\r\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\r\n  if (!supportCssPointerEvents && ghostEl) {\r\n    css(ghostEl, 'display', '');\r\n  }\r\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\r\n\r\n\r\nif (documentExists && !ChromeForAndroid) {\r\n  document.addEventListener('click', function (evt) {\r\n    if (ignoreNextClick) {\r\n      evt.preventDefault();\r\n      evt.stopPropagation && evt.stopPropagation();\r\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\r\n      ignoreNextClick = false;\r\n      return false;\r\n    }\r\n  }, true);\r\n}\r\n\r\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\r\n  if (dragEl) {\r\n    evt = evt.touches ? evt.touches[0] : evt;\r\n\r\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\r\n\r\n    if (nearest) {\r\n      // Create imitation event\r\n      var event = {};\r\n\r\n      for (var i in evt) {\r\n        if (evt.hasOwnProperty(i)) {\r\n          event[i] = evt[i];\r\n        }\r\n      }\r\n\r\n      event.target = event.rootEl = nearest;\r\n      event.preventDefault = void 0;\r\n      event.stopPropagation = void 0;\r\n\r\n      nearest[expando]._onDragOver(event);\r\n    }\r\n  }\r\n};\r\n\r\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\r\n  if (dragEl) {\r\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\r\n  }\r\n};\r\n/**\r\n * @class  Sortable\r\n * @param  {HTMLElement}  el\r\n * @param  {Object}       [options]\r\n */\r\n\r\n\r\nfunction Sortable(el, options) {\r\n  if (!(el && el.nodeType && el.nodeType === 1)) {\r\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\r\n  }\r\n\r\n  this.el = el; // root element\r\n\r\n  this.options = options = _extends({}, options); // Export instance\r\n\r\n  el[expando] = this;\r\n  var defaults = {\r\n    group: null,\r\n    sort: true,\r\n    disabled: false,\r\n    store: null,\r\n    handle: null,\r\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\r\n    swapThreshold: 1,\r\n    // percentage; 0 <= x <= 1\r\n    invertSwap: false,\r\n    // invert always\r\n    invertedSwapThreshold: null,\r\n    // will be set to same as swapThreshold if default\r\n    removeCloneOnHide: true,\r\n    direction: function direction() {\r\n      return _detectDirection(el, this.options);\r\n    },\r\n    ghostClass: 'sortable-ghost',\r\n    chosenClass: 'sortable-chosen',\r\n    dragClass: 'sortable-drag',\r\n    ignore: 'a, img',\r\n    filter: null,\r\n    preventOnFilter: true,\r\n    animation: 0,\r\n    easing: null,\r\n    setData: function setData(dataTransfer, dragEl) {\r\n      dataTransfer.setData('Text', dragEl.textContent);\r\n    },\r\n    dropBubble: false,\r\n    dragoverBubble: false,\r\n    dataIdAttr: 'data-id',\r\n    delay: 0,\r\n    delayOnTouchOnly: false,\r\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\r\n    forceFallback: false,\r\n    fallbackClass: 'sortable-fallback',\r\n    fallbackOnBody: false,\r\n    fallbackTolerance: 0,\r\n    fallbackOffset: {\r\n      x: 0,\r\n      y: 0\r\n    },\r\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window && !Safari,\r\n    emptyInsertThreshold: 5\r\n  };\r\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\r\n\r\n  for (var name in defaults) {\r\n    !(name in options) && (options[name] = defaults[name]);\r\n  }\r\n\r\n  _prepareGroup(options); // Bind all private methods\r\n\r\n\r\n  for (var fn in this) {\r\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n      this[fn] = this[fn].bind(this);\r\n    }\r\n  } // Setup drag mode\r\n\r\n\r\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\r\n\r\n  if (this.nativeDraggable) {\r\n    // Touch start threshold cannot be greater than the native dragstart threshold\r\n    this.options.touchStartThreshold = 1;\r\n  } // Bind events\r\n\r\n\r\n  if (options.supportPointer) {\r\n    on(el, 'pointerdown', this._onTapStart);\r\n  } else {\r\n    on(el, 'mousedown', this._onTapStart);\r\n    on(el, 'touchstart', this._onTapStart);\r\n  }\r\n\r\n  if (this.nativeDraggable) {\r\n    on(el, 'dragover', this);\r\n    on(el, 'dragenter', this);\r\n  }\r\n\r\n  sortables.push(this.el); // Restore sorting\r\n\r\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\r\n\r\n  _extends(this, AnimationStateManager());\r\n}\r\n\r\nSortable.prototype =\r\n/** @lends Sortable.prototype */\r\n{\r\n  constructor: Sortable,\r\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\r\n    if (!this.el.contains(target) && target !== this.el) {\r\n      lastTarget = null;\r\n    }\r\n  },\r\n  _getDirection: function _getDirection(evt, target) {\r\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\r\n  },\r\n  _onTapStart: function _onTapStart(\r\n  /** Event|TouchEvent */\r\n  evt) {\r\n    if (!evt.cancelable) return;\r\n\r\n    var _this = this,\r\n        el = this.el,\r\n        options = this.options,\r\n        preventOnFilter = options.preventOnFilter,\r\n        type = evt.type,\r\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\r\n        target = (touch || evt).target,\r\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\r\n        filter = options.filter;\r\n\r\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\r\n\r\n\r\n    if (dragEl) {\r\n      return;\r\n    }\r\n\r\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\r\n      return; // only left button and enabled\r\n    } // cancel dnd if original target is content editable\r\n\r\n\r\n    if (originalTarget.isContentEditable) {\r\n      return;\r\n    } // Safari ignores further event handling after mousedown\r\n\r\n\r\n    if (!this.nativeDraggable && Safari && target && target.tagName.toUpperCase() === 'SELECT') {\r\n      return;\r\n    }\r\n\r\n    target = closest(target, options.draggable, el, false);\r\n\r\n    if (target && target.animated) {\r\n      return;\r\n    }\r\n\r\n    if (lastDownEl === target) {\r\n      // Ignoring duplicate `down`\r\n      return;\r\n    } // Get the index of the dragged element within its parent\r\n\r\n\r\n    oldIndex = index(target);\r\n    oldDraggableIndex = index(target, options.draggable); // Check filter\r\n\r\n    if (typeof filter === 'function') {\r\n      if (filter.call(this, evt, target, this)) {\r\n        _dispatchEvent({\r\n          sortable: _this,\r\n          rootEl: originalTarget,\r\n          name: 'filter',\r\n          targetEl: target,\r\n          toEl: el,\r\n          fromEl: el\r\n        });\r\n\r\n        pluginEvent('filter', _this, {\r\n          evt: evt\r\n        });\r\n        preventOnFilter && evt.cancelable && evt.preventDefault();\r\n        return; // cancel dnd\r\n      }\r\n    } else if (filter) {\r\n      filter = filter.split(',').some(function (criteria) {\r\n        criteria = closest(originalTarget, criteria.trim(), el, false);\r\n\r\n        if (criteria) {\r\n          _dispatchEvent({\r\n            sortable: _this,\r\n            rootEl: criteria,\r\n            name: 'filter',\r\n            targetEl: target,\r\n            fromEl: el,\r\n            toEl: el\r\n          });\r\n\r\n          pluginEvent('filter', _this, {\r\n            evt: evt\r\n          });\r\n          return true;\r\n        }\r\n      });\r\n\r\n      if (filter) {\r\n        preventOnFilter && evt.cancelable && evt.preventDefault();\r\n        return; // cancel dnd\r\n      }\r\n    }\r\n\r\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\r\n      return;\r\n    } // Prepare `dragstart`\r\n\r\n\r\n    this._prepareDragStart(evt, touch, target);\r\n  },\r\n  _prepareDragStart: function _prepareDragStart(\r\n  /** Event */\r\n  evt,\r\n  /** Touch */\r\n  touch,\r\n  /** HTMLElement */\r\n  target) {\r\n    var _this = this,\r\n        el = _this.el,\r\n        options = _this.options,\r\n        ownerDocument = el.ownerDocument,\r\n        dragStartFn;\r\n\r\n    if (target && !dragEl && target.parentNode === el) {\r\n      var dragRect = getRect(target);\r\n      rootEl = el;\r\n      dragEl = target;\r\n      parentEl = dragEl.parentNode;\r\n      nextEl = dragEl.nextSibling;\r\n      lastDownEl = target;\r\n      activeGroup = options.group;\r\n      Sortable.dragged = dragEl;\r\n      tapEvt = {\r\n        target: dragEl,\r\n        clientX: (touch || evt).clientX,\r\n        clientY: (touch || evt).clientY\r\n      };\r\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\r\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\r\n      this._lastX = (touch || evt).clientX;\r\n      this._lastY = (touch || evt).clientY;\r\n      dragEl.style['will-change'] = 'all';\r\n\r\n      dragStartFn = function dragStartFn() {\r\n        pluginEvent('delayEnded', _this, {\r\n          evt: evt\r\n        });\r\n\r\n        if (Sortable.eventCanceled) {\r\n          _this._onDrop();\r\n\r\n          return;\r\n        } // Delayed drag has been triggered\r\n        // we can re-enable the events: touchmove/mousemove\r\n\r\n\r\n        _this._disableDelayedDragEvents();\r\n\r\n        if (!FireFox && _this.nativeDraggable) {\r\n          dragEl.draggable = true;\r\n        } // Bind the events: dragstart/dragend\r\n\r\n\r\n        _this._triggerDragStart(evt, touch); // Drag start event\r\n\r\n\r\n        _dispatchEvent({\r\n          sortable: _this,\r\n          name: 'choose',\r\n          originalEvent: evt\r\n        }); // Chosen item\r\n\r\n\r\n        toggleClass(dragEl, options.chosenClass, true);\r\n      }; // Disable \"draggable\"\r\n\r\n\r\n      options.ignore.split(',').forEach(function (criteria) {\r\n        find(dragEl, criteria.trim(), _disableDraggable);\r\n      });\r\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\r\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\r\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\r\n      on(ownerDocument, 'mouseup', _this._onDrop);\r\n      on(ownerDocument, 'touchend', _this._onDrop);\r\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\r\n\r\n      if (FireFox && this.nativeDraggable) {\r\n        this.options.touchStartThreshold = 4;\r\n        dragEl.draggable = true;\r\n      }\r\n\r\n      pluginEvent('delayStart', this, {\r\n        evt: evt\r\n      }); // Delay is impossible for native DnD in Edge or IE\r\n\r\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\r\n        if (Sortable.eventCanceled) {\r\n          this._onDrop();\r\n\r\n          return;\r\n        } // If the user moves the pointer or let go the click or touch\r\n        // before the delay has been reached:\r\n        // disable the delayed drag\r\n\r\n\r\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\r\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\r\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\r\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\r\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\r\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\r\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\r\n      } else {\r\n        dragStartFn();\r\n      }\r\n    }\r\n  },\r\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\r\n  /** TouchEvent|PointerEvent **/\r\n  e) {\r\n    var touch = e.touches ? e.touches[0] : e;\r\n\r\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\r\n      this._disableDelayedDrag();\r\n    }\r\n  },\r\n  _disableDelayedDrag: function _disableDelayedDrag() {\r\n    dragEl && _disableDraggable(dragEl);\r\n    clearTimeout(this._dragStartTimer);\r\n\r\n    this._disableDelayedDragEvents();\r\n  },\r\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\r\n    var ownerDocument = this.el.ownerDocument;\r\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\r\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\r\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\r\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\r\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\r\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\r\n  },\r\n  _triggerDragStart: function _triggerDragStart(\r\n  /** Event */\r\n  evt,\r\n  /** Touch */\r\n  touch) {\r\n    touch = touch || evt.pointerType == 'touch' && evt;\r\n\r\n    if (!this.nativeDraggable || touch) {\r\n      if (this.options.supportPointer) {\r\n        on(document, 'pointermove', this._onTouchMove);\r\n      } else if (touch) {\r\n        on(document, 'touchmove', this._onTouchMove);\r\n      } else {\r\n        on(document, 'mousemove', this._onTouchMove);\r\n      }\r\n    } else {\r\n      on(dragEl, 'dragend', this);\r\n      on(rootEl, 'dragstart', this._onDragStart);\r\n    }\r\n\r\n    try {\r\n      if (document.selection) {\r\n        // Timeout neccessary for IE9\r\n        _nextTick(function () {\r\n          document.selection.empty();\r\n        });\r\n      } else {\r\n        window.getSelection().removeAllRanges();\r\n      }\r\n    } catch (err) {}\r\n  },\r\n  _dragStarted: function _dragStarted(fallback, evt) {\r\n\r\n    awaitingDragStarted = false;\r\n\r\n    if (rootEl && dragEl) {\r\n      pluginEvent('dragStarted', this, {\r\n        evt: evt\r\n      });\r\n\r\n      if (this.nativeDraggable) {\r\n        on(document, 'dragover', _checkOutsideTargetEl);\r\n      }\r\n\r\n      var options = this.options; // Apply effect\r\n\r\n      !fallback && toggleClass(dragEl, options.dragClass, false);\r\n      toggleClass(dragEl, options.ghostClass, true);\r\n      Sortable.active = this;\r\n      fallback && this._appendGhost(); // Drag start event\r\n\r\n      _dispatchEvent({\r\n        sortable: this,\r\n        name: 'start',\r\n        originalEvent: evt\r\n      });\r\n    } else {\r\n      this._nulling();\r\n    }\r\n  },\r\n  _emulateDragOver: function _emulateDragOver() {\r\n    if (touchEvt) {\r\n      this._lastX = touchEvt.clientX;\r\n      this._lastY = touchEvt.clientY;\r\n\r\n      _hideGhostForTarget();\r\n\r\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n      var parent = target;\r\n\r\n      while (target && target.shadowRoot) {\r\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\r\n        if (target === parent) break;\r\n        parent = target;\r\n      }\r\n\r\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\r\n\r\n      if (parent) {\r\n        do {\r\n          if (parent[expando]) {\r\n            var inserted = void 0;\r\n            inserted = parent[expando]._onDragOver({\r\n              clientX: touchEvt.clientX,\r\n              clientY: touchEvt.clientY,\r\n              target: target,\r\n              rootEl: parent\r\n            });\r\n\r\n            if (inserted && !this.options.dragoverBubble) {\r\n              break;\r\n            }\r\n          }\r\n\r\n          target = parent; // store last element\r\n        }\r\n        /* jshint boss:true */\r\n        while (parent = parent.parentNode);\r\n      }\r\n\r\n      _unhideGhostForTarget();\r\n    }\r\n  },\r\n  _onTouchMove: function _onTouchMove(\r\n  /**TouchEvent*/\r\n  evt) {\r\n    if (tapEvt) {\r\n      var options = this.options,\r\n          fallbackTolerance = options.fallbackTolerance,\r\n          fallbackOffset = options.fallbackOffset,\r\n          touch = evt.touches ? evt.touches[0] : evt,\r\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\r\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\r\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\r\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\r\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\r\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\r\n\r\n      if (!Sortable.active && !awaitingDragStarted) {\r\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\r\n          return;\r\n        }\r\n\r\n        this._onDragStart(evt, true);\r\n      }\r\n\r\n      if (ghostEl) {\r\n        if (ghostMatrix) {\r\n          ghostMatrix.e += dx - (lastDx || 0);\r\n          ghostMatrix.f += dy - (lastDy || 0);\r\n        } else {\r\n          ghostMatrix = {\r\n            a: 1,\r\n            b: 0,\r\n            c: 0,\r\n            d: 1,\r\n            e: dx,\r\n            f: dy\r\n          };\r\n        }\r\n\r\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\r\n        css(ghostEl, 'webkitTransform', cssMatrix);\r\n        css(ghostEl, 'mozTransform', cssMatrix);\r\n        css(ghostEl, 'msTransform', cssMatrix);\r\n        css(ghostEl, 'transform', cssMatrix);\r\n        lastDx = dx;\r\n        lastDy = dy;\r\n        touchEvt = touch;\r\n      }\r\n\r\n      evt.cancelable && evt.preventDefault();\r\n    }\r\n  },\r\n  _appendGhost: function _appendGhost() {\r\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\r\n    // Not being adjusted for\r\n    if (!ghostEl) {\r\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\r\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\r\n          options = this.options; // Position absolutely\r\n\r\n      if (PositionGhostAbsolutely) {\r\n        // Get relatively positioned parent\r\n        ghostRelativeParent = container;\r\n\r\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\r\n          ghostRelativeParent = ghostRelativeParent.parentNode;\r\n        }\r\n\r\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\r\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\r\n          rect.top += ghostRelativeParent.scrollTop;\r\n          rect.left += ghostRelativeParent.scrollLeft;\r\n        } else {\r\n          ghostRelativeParent = getWindowScrollingElement();\r\n        }\r\n\r\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\r\n      }\r\n\r\n      ghostEl = dragEl.cloneNode(true);\r\n      toggleClass(ghostEl, options.ghostClass, false);\r\n      toggleClass(ghostEl, options.fallbackClass, true);\r\n      toggleClass(ghostEl, options.dragClass, true);\r\n      css(ghostEl, 'transition', '');\r\n      css(ghostEl, 'transform', '');\r\n      css(ghostEl, 'box-sizing', 'border-box');\r\n      css(ghostEl, 'margin', 0);\r\n      css(ghostEl, 'top', rect.top);\r\n      css(ghostEl, 'left', rect.left);\r\n      css(ghostEl, 'width', rect.width);\r\n      css(ghostEl, 'height', rect.height);\r\n      css(ghostEl, 'opacity', '0.8');\r\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\r\n      css(ghostEl, 'zIndex', '100000');\r\n      css(ghostEl, 'pointerEvents', 'none');\r\n      Sortable.ghost = ghostEl;\r\n      container.appendChild(ghostEl); // Set transform-origin\r\n\r\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\r\n    }\r\n  },\r\n  _onDragStart: function _onDragStart(\r\n  /**Event*/\r\n  evt,\r\n  /**boolean*/\r\n  fallback) {\r\n    var _this = this;\r\n\r\n    var dataTransfer = evt.dataTransfer;\r\n    var options = _this.options;\r\n    pluginEvent('dragStart', this, {\r\n      evt: evt\r\n    });\r\n\r\n    if (Sortable.eventCanceled) {\r\n      this._onDrop();\r\n\r\n      return;\r\n    }\r\n\r\n    pluginEvent('setupClone', this);\r\n\r\n    if (!Sortable.eventCanceled) {\r\n      cloneEl = clone(dragEl);\r\n      cloneEl.removeAttribute(\"id\");\r\n      cloneEl.draggable = false;\r\n      cloneEl.style['will-change'] = '';\r\n\r\n      this._hideClone();\r\n\r\n      toggleClass(cloneEl, this.options.chosenClass, false);\r\n      Sortable.clone = cloneEl;\r\n    } // #1143: IFrame support workaround\r\n\r\n\r\n    _this.cloneId = _nextTick(function () {\r\n      pluginEvent('clone', _this);\r\n      if (Sortable.eventCanceled) return;\r\n\r\n      if (!_this.options.removeCloneOnHide) {\r\n        rootEl.insertBefore(cloneEl, dragEl);\r\n      }\r\n\r\n      _this._hideClone();\r\n\r\n      _dispatchEvent({\r\n        sortable: _this,\r\n        name: 'clone'\r\n      });\r\n    });\r\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\r\n\r\n    if (fallback) {\r\n      ignoreNextClick = true;\r\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\r\n    } else {\r\n      // Undo what was set in _prepareDragStart before drag started\r\n      off(document, 'mouseup', _this._onDrop);\r\n      off(document, 'touchend', _this._onDrop);\r\n      off(document, 'touchcancel', _this._onDrop);\r\n\r\n      if (dataTransfer) {\r\n        dataTransfer.effectAllowed = 'move';\r\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\r\n      }\r\n\r\n      on(document, 'drop', _this); // #1276 fix:\r\n\r\n      css(dragEl, 'transform', 'translateZ(0)');\r\n    }\r\n\r\n    awaitingDragStarted = true;\r\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\r\n    on(document, 'selectstart', _this);\r\n    moved = true;\r\n\r\n    if (Safari) {\r\n      css(document.body, 'user-select', 'none');\r\n    }\r\n  },\r\n  // Returns true - if no further action is needed (either inserted or another condition)\r\n  _onDragOver: function _onDragOver(\r\n  /**Event*/\r\n  evt) {\r\n    var el = this.el,\r\n        target = evt.target,\r\n        dragRect,\r\n        targetRect,\r\n        revert,\r\n        options = this.options,\r\n        group = options.group,\r\n        activeSortable = Sortable.active,\r\n        isOwner = activeGroup === group,\r\n        canSort = options.sort,\r\n        fromSortable = putSortable || activeSortable,\r\n        vertical,\r\n        _this = this,\r\n        completedFired = false;\r\n\r\n    if (_silent) return;\r\n\r\n    function dragOverEvent(name, extra) {\r\n      pluginEvent(name, _this, _objectSpread2({\r\n        evt: evt,\r\n        isOwner: isOwner,\r\n        axis: vertical ? 'vertical' : 'horizontal',\r\n        revert: revert,\r\n        dragRect: dragRect,\r\n        targetRect: targetRect,\r\n        canSort: canSort,\r\n        fromSortable: fromSortable,\r\n        target: target,\r\n        completed: completed,\r\n        onMove: function onMove(target, after) {\r\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\r\n        },\r\n        changed: changed\r\n      }, extra));\r\n    } // Capture animation state\r\n\r\n\r\n    function capture() {\r\n      dragOverEvent('dragOverAnimationCapture');\r\n\r\n      _this.captureAnimationState();\r\n\r\n      if (_this !== fromSortable) {\r\n        fromSortable.captureAnimationState();\r\n      }\r\n    } // Return invocation when dragEl is inserted (or completed)\r\n\r\n\r\n    function completed(insertion) {\r\n      dragOverEvent('dragOverCompleted', {\r\n        insertion: insertion\r\n      });\r\n\r\n      if (insertion) {\r\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\r\n        if (isOwner) {\r\n          activeSortable._hideClone();\r\n        } else {\r\n          activeSortable._showClone(_this);\r\n        }\r\n\r\n        if (_this !== fromSortable) {\r\n          // Set ghost class to new sortable's ghost class\r\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\r\n          toggleClass(dragEl, options.ghostClass, true);\r\n        }\r\n\r\n        if (putSortable !== _this && _this !== Sortable.active) {\r\n          putSortable = _this;\r\n        } else if (_this === Sortable.active && putSortable) {\r\n          putSortable = null;\r\n        } // Animation\r\n\r\n\r\n        if (fromSortable === _this) {\r\n          _this._ignoreWhileAnimating = target;\r\n        }\r\n\r\n        _this.animateAll(function () {\r\n          dragOverEvent('dragOverAnimationComplete');\r\n          _this._ignoreWhileAnimating = null;\r\n        });\r\n\r\n        if (_this !== fromSortable) {\r\n          fromSortable.animateAll();\r\n          fromSortable._ignoreWhileAnimating = null;\r\n        }\r\n      } // Null lastTarget if it is not inside a previously swapped element\r\n\r\n\r\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\r\n        lastTarget = null;\r\n      } // no bubbling and not fallback\r\n\r\n\r\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\r\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\r\n\r\n\r\n        !insertion && nearestEmptyInsertDetectEvent(evt);\r\n      }\r\n\r\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\r\n      return completedFired = true;\r\n    } // Call when dragEl has been inserted\r\n\r\n\r\n    function changed() {\r\n      newIndex = index(dragEl);\r\n      newDraggableIndex = index(dragEl, options.draggable);\r\n\r\n      _dispatchEvent({\r\n        sortable: _this,\r\n        name: 'change',\r\n        toEl: el,\r\n        newIndex: newIndex,\r\n        newDraggableIndex: newDraggableIndex,\r\n        originalEvent: evt\r\n      });\r\n    }\r\n\r\n    if (evt.preventDefault !== void 0) {\r\n      evt.cancelable && evt.preventDefault();\r\n    }\r\n\r\n    target = closest(target, options.draggable, el, true);\r\n    dragOverEvent('dragOver');\r\n    if (Sortable.eventCanceled) return completedFired;\r\n\r\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\r\n      return completed(false);\r\n    }\r\n\r\n    ignoreNextClick = false;\r\n\r\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = parentEl !== rootEl) // Reverting item into the original list\r\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\r\n      vertical = this._getDirection(evt, target) === 'vertical';\r\n      dragRect = getRect(dragEl);\r\n      dragOverEvent('dragOverValid');\r\n      if (Sortable.eventCanceled) return completedFired;\r\n\r\n      if (revert) {\r\n        parentEl = rootEl; // actualization\r\n\r\n        capture();\r\n\r\n        this._hideClone();\r\n\r\n        dragOverEvent('revert');\r\n\r\n        if (!Sortable.eventCanceled) {\r\n          if (nextEl) {\r\n            rootEl.insertBefore(dragEl, nextEl);\r\n          } else {\r\n            rootEl.appendChild(dragEl);\r\n          }\r\n        }\r\n\r\n        return completed(true);\r\n      }\r\n\r\n      var elLastChild = lastChild(el, options.draggable);\r\n\r\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\r\n        // Insert to end of list\r\n        // If already at end of list: Do not insert\r\n        if (elLastChild === dragEl) {\r\n          return completed(false);\r\n        } // if there is a last element, it is the target\r\n\r\n\r\n        if (elLastChild && el === evt.target) {\r\n          target = elLastChild;\r\n        }\r\n\r\n        if (target) {\r\n          targetRect = getRect(target);\r\n        }\r\n\r\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\r\n          capture();\r\n\r\n          if (elLastChild && elLastChild.nextSibling) {\r\n            // the last draggable element is not the last node\r\n            el.insertBefore(dragEl, elLastChild.nextSibling);\r\n          } else {\r\n            el.appendChild(dragEl);\r\n          }\r\n\r\n          parentEl = el; // actualization\r\n\r\n          changed();\r\n          return completed(true);\r\n        }\r\n      } else if (elLastChild && _ghostIsFirst(evt, vertical, this)) {\r\n        // Insert to start of list\r\n        var firstChild = getChild(el, 0, options, true);\r\n\r\n        if (firstChild === dragEl) {\r\n          return completed(false);\r\n        }\r\n\r\n        target = firstChild;\r\n        targetRect = getRect(target);\r\n\r\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, false) !== false) {\r\n          capture();\r\n          el.insertBefore(dragEl, firstChild);\r\n          parentEl = el; // actualization\r\n\r\n          changed();\r\n          return completed(true);\r\n        }\r\n      } else if (target.parentNode === el) {\r\n        targetRect = getRect(target);\r\n        var direction = 0,\r\n            targetBeforeFirstSwap,\r\n            differentLevel = dragEl.parentNode !== el,\r\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\r\n            side1 = vertical ? 'top' : 'left',\r\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\r\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\r\n\r\n        if (lastTarget !== target) {\r\n          targetBeforeFirstSwap = targetRect[side1];\r\n          pastFirstInvertThresh = false;\r\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\r\n        }\r\n\r\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\r\n        var sibling;\r\n\r\n        if (direction !== 0) {\r\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\r\n          var dragIndex = index(dragEl);\r\n\r\n          do {\r\n            dragIndex -= direction;\r\n            sibling = parentEl.children[dragIndex];\r\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\r\n        } // If dragEl is already beside target: Do not insert\r\n\r\n\r\n        if (direction === 0 || sibling === target) {\r\n          return completed(false);\r\n        }\r\n\r\n        lastTarget = target;\r\n        lastDirection = direction;\r\n        var nextSibling = target.nextElementSibling,\r\n            after = false;\r\n        after = direction === 1;\r\n\r\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\r\n\r\n        if (moveVector !== false) {\r\n          if (moveVector === 1 || moveVector === -1) {\r\n            after = moveVector === 1;\r\n          }\r\n\r\n          _silent = true;\r\n          setTimeout(_unsilent, 30);\r\n          capture();\r\n\r\n          if (after && !nextSibling) {\r\n            el.appendChild(dragEl);\r\n          } else {\r\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\r\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\r\n\r\n\r\n          if (scrolledPastTop) {\r\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\r\n          }\r\n\r\n          parentEl = dragEl.parentNode; // actualization\r\n          // must be done before animation\r\n\r\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\r\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\r\n          }\r\n\r\n          changed();\r\n          return completed(true);\r\n        }\r\n      }\r\n\r\n      if (el.contains(dragEl)) {\r\n        return completed(false);\r\n      }\r\n    }\r\n\r\n    return false;\r\n  },\r\n  _ignoreWhileAnimating: null,\r\n  _offMoveEvents: function _offMoveEvents() {\r\n    off(document, 'mousemove', this._onTouchMove);\r\n    off(document, 'touchmove', this._onTouchMove);\r\n    off(document, 'pointermove', this._onTouchMove);\r\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\r\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\r\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\r\n  },\r\n  _offUpEvents: function _offUpEvents() {\r\n    var ownerDocument = this.el.ownerDocument;\r\n    off(ownerDocument, 'mouseup', this._onDrop);\r\n    off(ownerDocument, 'touchend', this._onDrop);\r\n    off(ownerDocument, 'pointerup', this._onDrop);\r\n    off(ownerDocument, 'touchcancel', this._onDrop);\r\n    off(document, 'selectstart', this);\r\n  },\r\n  _onDrop: function _onDrop(\r\n  /**Event*/\r\n  evt) {\r\n    var el = this.el,\r\n        options = this.options; // Get the index of the dragged element within its parent\r\n\r\n    newIndex = index(dragEl);\r\n    newDraggableIndex = index(dragEl, options.draggable);\r\n    pluginEvent('drop', this, {\r\n      evt: evt\r\n    });\r\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\r\n\r\n    newIndex = index(dragEl);\r\n    newDraggableIndex = index(dragEl, options.draggable);\r\n\r\n    if (Sortable.eventCanceled) {\r\n      this._nulling();\r\n\r\n      return;\r\n    }\r\n\r\n    awaitingDragStarted = false;\r\n    isCircumstantialInvert = false;\r\n    pastFirstInvertThresh = false;\r\n    clearInterval(this._loopId);\r\n    clearTimeout(this._dragStartTimer);\r\n\r\n    _cancelNextTick(this.cloneId);\r\n\r\n    _cancelNextTick(this._dragStartId); // Unbind events\r\n\r\n\r\n    if (this.nativeDraggable) {\r\n      off(document, 'drop', this);\r\n      off(el, 'dragstart', this._onDragStart);\r\n    }\r\n\r\n    this._offMoveEvents();\r\n\r\n    this._offUpEvents();\r\n\r\n    if (Safari) {\r\n      css(document.body, 'user-select', '');\r\n    }\r\n\r\n    css(dragEl, 'transform', '');\r\n\r\n    if (evt) {\r\n      if (moved) {\r\n        evt.cancelable && evt.preventDefault();\r\n        !options.dropBubble && evt.stopPropagation();\r\n      }\r\n\r\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\r\n\r\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\r\n        // Remove clone(s)\r\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\r\n      }\r\n\r\n      if (dragEl) {\r\n        if (this.nativeDraggable) {\r\n          off(dragEl, 'dragend', this);\r\n        }\r\n\r\n        _disableDraggable(dragEl);\r\n\r\n        dragEl.style['will-change'] = ''; // Remove classes\r\n        // ghostClass is added in dragStarted\r\n\r\n        if (moved && !awaitingDragStarted) {\r\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\r\n        }\r\n\r\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\r\n\r\n        _dispatchEvent({\r\n          sortable: this,\r\n          name: 'unchoose',\r\n          toEl: parentEl,\r\n          newIndex: null,\r\n          newDraggableIndex: null,\r\n          originalEvent: evt\r\n        });\r\n\r\n        if (rootEl !== parentEl) {\r\n          if (newIndex >= 0) {\r\n            // Add event\r\n            _dispatchEvent({\r\n              rootEl: parentEl,\r\n              name: 'add',\r\n              toEl: parentEl,\r\n              fromEl: rootEl,\r\n              originalEvent: evt\r\n            }); // Remove event\r\n\r\n\r\n            _dispatchEvent({\r\n              sortable: this,\r\n              name: 'remove',\r\n              toEl: parentEl,\r\n              originalEvent: evt\r\n            }); // drag from one list and drop into another\r\n\r\n\r\n            _dispatchEvent({\r\n              rootEl: parentEl,\r\n              name: 'sort',\r\n              toEl: parentEl,\r\n              fromEl: rootEl,\r\n              originalEvent: evt\r\n            });\r\n\r\n            _dispatchEvent({\r\n              sortable: this,\r\n              name: 'sort',\r\n              toEl: parentEl,\r\n              originalEvent: evt\r\n            });\r\n          }\r\n\r\n          putSortable && putSortable.save();\r\n        } else {\r\n          if (newIndex !== oldIndex) {\r\n            if (newIndex >= 0) {\r\n              // drag & drop within the same list\r\n              _dispatchEvent({\r\n                sortable: this,\r\n                name: 'update',\r\n                toEl: parentEl,\r\n                originalEvent: evt\r\n              });\r\n\r\n              _dispatchEvent({\r\n                sortable: this,\r\n                name: 'sort',\r\n                toEl: parentEl,\r\n                originalEvent: evt\r\n              });\r\n            }\r\n          }\r\n        }\r\n\r\n        if (Sortable.active) {\r\n          /* jshint eqnull:true */\r\n          if (newIndex == null || newIndex === -1) {\r\n            newIndex = oldIndex;\r\n            newDraggableIndex = oldDraggableIndex;\r\n          }\r\n\r\n          _dispatchEvent({\r\n            sortable: this,\r\n            name: 'end',\r\n            toEl: parentEl,\r\n            originalEvent: evt\r\n          }); // Save sorting\r\n\r\n\r\n          this.save();\r\n        }\r\n      }\r\n    }\r\n\r\n    this._nulling();\r\n  },\r\n  _nulling: function _nulling() {\r\n    pluginEvent('nulling', this);\r\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\r\n    savedInputChecked.forEach(function (el) {\r\n      el.checked = true;\r\n    });\r\n    savedInputChecked.length = lastDx = lastDy = 0;\r\n  },\r\n  handleEvent: function handleEvent(\r\n  /**Event*/\r\n  evt) {\r\n    switch (evt.type) {\r\n      case 'drop':\r\n      case 'dragend':\r\n        this._onDrop(evt);\r\n\r\n        break;\r\n\r\n      case 'dragenter':\r\n      case 'dragover':\r\n        if (dragEl) {\r\n          this._onDragOver(evt);\r\n\r\n          _globalDragOver(evt);\r\n        }\r\n\r\n        break;\r\n\r\n      case 'selectstart':\r\n        evt.preventDefault();\r\n        break;\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Serializes the item into an array of string.\r\n   * @returns {String[]}\r\n   */\r\n  toArray: function toArray() {\r\n    var order = [],\r\n        el,\r\n        children = this.el.children,\r\n        i = 0,\r\n        n = children.length,\r\n        options = this.options;\r\n\r\n    for (; i < n; i++) {\r\n      el = children[i];\r\n\r\n      if (closest(el, options.draggable, this.el, false)) {\r\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\r\n      }\r\n    }\r\n\r\n    return order;\r\n  },\r\n\r\n  /**\r\n   * Sorts the elements according to the array.\r\n   * @param  {String[]}  order  order of the items\r\n   */\r\n  sort: function sort(order, useAnimation) {\r\n    var items = {},\r\n        rootEl = this.el;\r\n    this.toArray().forEach(function (id, i) {\r\n      var el = rootEl.children[i];\r\n\r\n      if (closest(el, this.options.draggable, rootEl, false)) {\r\n        items[id] = el;\r\n      }\r\n    }, this);\r\n    useAnimation && this.captureAnimationState();\r\n    order.forEach(function (id) {\r\n      if (items[id]) {\r\n        rootEl.removeChild(items[id]);\r\n        rootEl.appendChild(items[id]);\r\n      }\r\n    });\r\n    useAnimation && this.animateAll();\r\n  },\r\n\r\n  /**\r\n   * Save the current sorting\r\n   */\r\n  save: function save() {\r\n    var store = this.options.store;\r\n    store && store.set && store.set(this);\r\n  },\r\n\r\n  /**\r\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\r\n   * @param   {HTMLElement}  el\r\n   * @param   {String}       [selector]  default: `options.draggable`\r\n   * @returns {HTMLElement|null}\r\n   */\r\n  closest: function closest$1(el, selector) {\r\n    return closest(el, selector || this.options.draggable, this.el, false);\r\n  },\r\n\r\n  /**\r\n   * Set/get option\r\n   * @param   {string} name\r\n   * @param   {*}      [value]\r\n   * @returns {*}\r\n   */\r\n  option: function option(name, value) {\r\n    var options = this.options;\r\n\r\n    if (value === void 0) {\r\n      return options[name];\r\n    } else {\r\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\r\n\r\n      if (typeof modifiedValue !== 'undefined') {\r\n        options[name] = modifiedValue;\r\n      } else {\r\n        options[name] = value;\r\n      }\r\n\r\n      if (name === 'group') {\r\n        _prepareGroup(options);\r\n      }\r\n    }\r\n  },\r\n\r\n  /**\r\n   * Destroy\r\n   */\r\n  destroy: function destroy() {\r\n    pluginEvent('destroy', this);\r\n    var el = this.el;\r\n    el[expando] = null;\r\n    off(el, 'mousedown', this._onTapStart);\r\n    off(el, 'touchstart', this._onTapStart);\r\n    off(el, 'pointerdown', this._onTapStart);\r\n\r\n    if (this.nativeDraggable) {\r\n      off(el, 'dragover', this);\r\n      off(el, 'dragenter', this);\r\n    } // Remove draggable attributes\r\n\r\n\r\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\r\n      el.removeAttribute('draggable');\r\n    });\r\n\r\n    this._onDrop();\r\n\r\n    this._disableDelayedDragEvents();\r\n\r\n    sortables.splice(sortables.indexOf(this.el), 1);\r\n    this.el = el = null;\r\n  },\r\n  _hideClone: function _hideClone() {\r\n    if (!cloneHidden) {\r\n      pluginEvent('hideClone', this);\r\n      if (Sortable.eventCanceled) return;\r\n      css(cloneEl, 'display', 'none');\r\n\r\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\r\n        cloneEl.parentNode.removeChild(cloneEl);\r\n      }\r\n\r\n      cloneHidden = true;\r\n    }\r\n  },\r\n  _showClone: function _showClone(putSortable) {\r\n    if (putSortable.lastPutMode !== 'clone') {\r\n      this._hideClone();\r\n\r\n      return;\r\n    }\r\n\r\n    if (cloneHidden) {\r\n      pluginEvent('showClone', this);\r\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\r\n\r\n      if (dragEl.parentNode == rootEl && !this.options.group.revertClone) {\r\n        rootEl.insertBefore(cloneEl, dragEl);\r\n      } else if (nextEl) {\r\n        rootEl.insertBefore(cloneEl, nextEl);\r\n      } else {\r\n        rootEl.appendChild(cloneEl);\r\n      }\r\n\r\n      if (this.options.group.revertClone) {\r\n        this.animate(dragEl, cloneEl);\r\n      }\r\n\r\n      css(cloneEl, 'display', '');\r\n      cloneHidden = false;\r\n    }\r\n  }\r\n};\r\n\r\nfunction _globalDragOver(\r\n/**Event*/\r\nevt) {\r\n  if (evt.dataTransfer) {\r\n    evt.dataTransfer.dropEffect = 'move';\r\n  }\r\n\r\n  evt.cancelable && evt.preventDefault();\r\n}\r\n\r\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\r\n  var evt,\r\n      sortable = fromEl[expando],\r\n      onMoveFn = sortable.options.onMove,\r\n      retVal; // Support for new CustomEvent feature\r\n\r\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\r\n    evt = new CustomEvent('move', {\r\n      bubbles: true,\r\n      cancelable: true\r\n    });\r\n  } else {\r\n    evt = document.createEvent('Event');\r\n    evt.initEvent('move', true, true);\r\n  }\r\n\r\n  evt.to = toEl;\r\n  evt.from = fromEl;\r\n  evt.dragged = dragEl;\r\n  evt.draggedRect = dragRect;\r\n  evt.related = targetEl || toEl;\r\n  evt.relatedRect = targetRect || getRect(toEl);\r\n  evt.willInsertAfter = willInsertAfter;\r\n  evt.originalEvent = originalEvent;\r\n  fromEl.dispatchEvent(evt);\r\n\r\n  if (onMoveFn) {\r\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\r\n  }\r\n\r\n  return retVal;\r\n}\r\n\r\nfunction _disableDraggable(el) {\r\n  el.draggable = false;\r\n}\r\n\r\nfunction _unsilent() {\r\n  _silent = false;\r\n}\r\n\r\nfunction _ghostIsFirst(evt, vertical, sortable) {\r\n  var rect = getRect(getChild(sortable.el, 0, sortable.options, true));\r\n  var spacer = 10;\r\n  return vertical ? evt.clientX < rect.left - spacer || evt.clientY < rect.top && evt.clientX < rect.right : evt.clientY < rect.top - spacer || evt.clientY < rect.bottom && evt.clientX < rect.left;\r\n}\r\n\r\nfunction _ghostIsLast(evt, vertical, sortable) {\r\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\r\n  var spacer = 10;\r\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\r\n}\r\n\r\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\r\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\r\n      targetLength = vertical ? targetRect.height : targetRect.width,\r\n      targetS1 = vertical ? targetRect.top : targetRect.left,\r\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\r\n      invert = false;\r\n\r\n  if (!invertSwap) {\r\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\r\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\r\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\r\n      // check if past first invert threshold on side opposite of lastDirection\r\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\r\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\r\n        pastFirstInvertThresh = true;\r\n      }\r\n\r\n      if (!pastFirstInvertThresh) {\r\n        // dragEl shadow (target move distance shadow)\r\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\r\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\r\n          return -lastDirection;\r\n        }\r\n      } else {\r\n        invert = true;\r\n      }\r\n    } else {\r\n      // Regular\r\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\r\n        return _getInsertDirection(target);\r\n      }\r\n    }\r\n  }\r\n\r\n  invert = invert || invertSwap;\r\n\r\n  if (invert) {\r\n    // Invert of regular\r\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\r\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\r\n    }\r\n  }\r\n\r\n  return 0;\r\n}\r\n/**\r\n * Gets the direction dragEl must be swapped relative to target in order to make it\r\n * seem that dragEl has been \"inserted\" into that element's position\r\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\r\n * @return {Number}                   Direction dragEl must be swapped\r\n */\r\n\r\n\r\nfunction _getInsertDirection(target) {\r\n  if (index(dragEl) < index(target)) {\r\n    return 1;\r\n  } else {\r\n    return -1;\r\n  }\r\n}\r\n/**\r\n * Generate id\r\n * @param   {HTMLElement} el\r\n * @returns {String}\r\n * @private\r\n */\r\n\r\n\r\nfunction _generateId(el) {\r\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\r\n      i = str.length,\r\n      sum = 0;\r\n\r\n  while (i--) {\r\n    sum += str.charCodeAt(i);\r\n  }\r\n\r\n  return sum.toString(36);\r\n}\r\n\r\nfunction _saveInputCheckedState(root) {\r\n  savedInputChecked.length = 0;\r\n  var inputs = root.getElementsByTagName('input');\r\n  var idx = inputs.length;\r\n\r\n  while (idx--) {\r\n    var el = inputs[idx];\r\n    el.checked && savedInputChecked.push(el);\r\n  }\r\n}\r\n\r\nfunction _nextTick(fn) {\r\n  return setTimeout(fn, 0);\r\n}\r\n\r\nfunction _cancelNextTick(id) {\r\n  return clearTimeout(id);\r\n} // Fixed #973:\r\n\r\n\r\nif (documentExists) {\r\n  on(document, 'touchmove', function (evt) {\r\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\r\n      evt.preventDefault();\r\n    }\r\n  });\r\n} // Export utils\r\n\r\n\r\nSortable.utils = {\r\n  on: on,\r\n  off: off,\r\n  css: css,\r\n  find: find,\r\n  is: function is(el, selector) {\r\n    return !!closest(el, selector, el, false);\r\n  },\r\n  extend: extend,\r\n  throttle: throttle,\r\n  closest: closest,\r\n  toggleClass: toggleClass,\r\n  clone: clone,\r\n  index: index,\r\n  nextTick: _nextTick,\r\n  cancelNextTick: _cancelNextTick,\r\n  detectDirection: _detectDirection,\r\n  getChild: getChild\r\n};\r\n/**\r\n * Get the Sortable instance of an element\r\n * @param  {HTMLElement} element The element\r\n * @return {Sortable|undefined}         The instance of Sortable\r\n */\r\n\r\nSortable.get = function (element) {\r\n  return element[expando];\r\n};\r\n/**\r\n * Mount a plugin to Sortable\r\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\r\n */\r\n\r\n\r\nSortable.mount = function () {\r\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\r\n    plugins[_key] = arguments[_key];\r\n  }\r\n\r\n  if (plugins[0].constructor === Array) plugins = plugins[0];\r\n  plugins.forEach(function (plugin) {\r\n    if (!plugin.prototype || !plugin.prototype.constructor) {\r\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\r\n    }\r\n\r\n    if (plugin.utils) Sortable.utils = _objectSpread2(_objectSpread2({}, Sortable.utils), plugin.utils);\r\n    PluginManager.mount(plugin);\r\n  });\r\n};\r\n/**\r\n * Create sortable instance\r\n * @param {HTMLElement}  el\r\n * @param {Object}      [options]\r\n */\r\n\r\n\r\nSortable.create = function (el, options) {\r\n  return new Sortable(el, options);\r\n}; // Export\r\n\r\n\r\nSortable.version = version;\r\n\r\nvar autoScrolls = [],\r\n    scrollEl,\r\n    scrollRootEl,\r\n    scrolling = false,\r\n    lastAutoScrollX,\r\n    lastAutoScrollY,\r\n    touchEvt$1,\r\n    pointerElemChangedInterval;\r\n\r\nfunction AutoScrollPlugin() {\r\n  function AutoScroll() {\r\n    this.defaults = {\r\n      scroll: true,\r\n      forceAutoScrollFallback: false,\r\n      scrollSensitivity: 30,\r\n      scrollSpeed: 10,\r\n      bubbleScroll: true\r\n    }; // Bind all private methods\r\n\r\n    for (var fn in this) {\r\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n        this[fn] = this[fn].bind(this);\r\n      }\r\n    }\r\n  }\r\n\r\n  AutoScroll.prototype = {\r\n    dragStarted: function dragStarted(_ref) {\r\n      var originalEvent = _ref.originalEvent;\r\n\r\n      if (this.sortable.nativeDraggable) {\r\n        on(document, 'dragover', this._handleAutoScroll);\r\n      } else {\r\n        if (this.options.supportPointer) {\r\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\r\n        } else if (originalEvent.touches) {\r\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\r\n        } else {\r\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\r\n        }\r\n      }\r\n    },\r\n    dragOverCompleted: function dragOverCompleted(_ref2) {\r\n      var originalEvent = _ref2.originalEvent;\r\n\r\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\r\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\r\n        this._handleAutoScroll(originalEvent);\r\n      }\r\n    },\r\n    drop: function drop() {\r\n      if (this.sortable.nativeDraggable) {\r\n        off(document, 'dragover', this._handleAutoScroll);\r\n      } else {\r\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\r\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\r\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\r\n      }\r\n\r\n      clearPointerElemChangedInterval();\r\n      clearAutoScrolls();\r\n      cancelThrottle();\r\n    },\r\n    nulling: function nulling() {\r\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\r\n      autoScrolls.length = 0;\r\n    },\r\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\r\n      this._handleAutoScroll(evt, true);\r\n    },\r\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\r\n      var _this = this;\r\n\r\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\r\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\r\n          elem = document.elementFromPoint(x, y);\r\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\r\n      // Edge's autoscroll seems too conditional,\r\n      // MACOS Safari does not have autoscroll,\r\n      // Firefox and Chrome are good\r\n\r\n      if (fallback || this.options.forceAutoScrollFallback || Edge || IE11OrLess || Safari) {\r\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\r\n\r\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\r\n\r\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\r\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\r\n\r\n          pointerElemChangedInterval = setInterval(function () {\r\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\r\n\r\n            if (newElem !== ogElemScroller) {\r\n              ogElemScroller = newElem;\r\n              clearAutoScrolls();\r\n            }\r\n\r\n            autoScroll(evt, _this.options, newElem, fallback);\r\n          }, 10);\r\n          lastAutoScrollX = x;\r\n          lastAutoScrollY = y;\r\n        }\r\n      } else {\r\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\r\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\r\n          clearAutoScrolls();\r\n          return;\r\n        }\r\n\r\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\r\n      }\r\n    }\r\n  };\r\n  return _extends(AutoScroll, {\r\n    pluginName: 'scroll',\r\n    initializeByDefault: true\r\n  });\r\n}\r\n\r\nfunction clearAutoScrolls() {\r\n  autoScrolls.forEach(function (autoScroll) {\r\n    clearInterval(autoScroll.pid);\r\n  });\r\n  autoScrolls = [];\r\n}\r\n\r\nfunction clearPointerElemChangedInterval() {\r\n  clearInterval(pointerElemChangedInterval);\r\n}\r\n\r\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\r\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\r\n  if (!options.scroll) return;\r\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\r\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\r\n      sens = options.scrollSensitivity,\r\n      speed = options.scrollSpeed,\r\n      winScroller = getWindowScrollingElement();\r\n  var scrollThisInstance = false,\r\n      scrollCustomFn; // New scroll root, set scrollEl\r\n\r\n  if (scrollRootEl !== rootEl) {\r\n    scrollRootEl = rootEl;\r\n    clearAutoScrolls();\r\n    scrollEl = options.scroll;\r\n    scrollCustomFn = options.scrollFn;\r\n\r\n    if (scrollEl === true) {\r\n      scrollEl = getParentAutoScrollElement(rootEl, true);\r\n    }\r\n  }\r\n\r\n  var layersOut = 0;\r\n  var currentParent = scrollEl;\r\n\r\n  do {\r\n    var el = currentParent,\r\n        rect = getRect(el),\r\n        top = rect.top,\r\n        bottom = rect.bottom,\r\n        left = rect.left,\r\n        right = rect.right,\r\n        width = rect.width,\r\n        height = rect.height,\r\n        canScrollX = void 0,\r\n        canScrollY = void 0,\r\n        scrollWidth = el.scrollWidth,\r\n        scrollHeight = el.scrollHeight,\r\n        elCSS = css(el),\r\n        scrollPosX = el.scrollLeft,\r\n        scrollPosY = el.scrollTop;\r\n\r\n    if (el === winScroller) {\r\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\r\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\r\n    } else {\r\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\r\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\r\n    }\r\n\r\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\r\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\r\n\r\n    if (!autoScrolls[layersOut]) {\r\n      for (var i = 0; i <= layersOut; i++) {\r\n        if (!autoScrolls[i]) {\r\n          autoScrolls[i] = {};\r\n        }\r\n      }\r\n    }\r\n\r\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\r\n      autoScrolls[layersOut].el = el;\r\n      autoScrolls[layersOut].vx = vx;\r\n      autoScrolls[layersOut].vy = vy;\r\n      clearInterval(autoScrolls[layersOut].pid);\r\n\r\n      if (vx != 0 || vy != 0) {\r\n        scrollThisInstance = true;\r\n        /* jshint loopfunc:true */\r\n\r\n        autoScrolls[layersOut].pid = setInterval(function () {\r\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\r\n          if (isFallback && this.layer === 0) {\r\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\r\n\r\n          }\r\n\r\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\r\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\r\n\r\n          if (typeof scrollCustomFn === 'function') {\r\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\r\n              return;\r\n            }\r\n          }\r\n\r\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\r\n        }.bind({\r\n          layer: layersOut\r\n        }), 24);\r\n      }\r\n    }\r\n\r\n    layersOut++;\r\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\r\n\r\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\r\n}, 30);\r\n\r\nvar drop = function drop(_ref) {\r\n  var originalEvent = _ref.originalEvent,\r\n      putSortable = _ref.putSortable,\r\n      dragEl = _ref.dragEl,\r\n      activeSortable = _ref.activeSortable,\r\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\r\n      hideGhostForTarget = _ref.hideGhostForTarget,\r\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\r\n  if (!originalEvent) return;\r\n  var toSortable = putSortable || activeSortable;\r\n  hideGhostForTarget();\r\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\r\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\r\n  unhideGhostForTarget();\r\n\r\n  if (toSortable && !toSortable.el.contains(target)) {\r\n    dispatchSortableEvent('spill');\r\n    this.onSpill({\r\n      dragEl: dragEl,\r\n      putSortable: putSortable\r\n    });\r\n  }\r\n};\r\n\r\nfunction Revert() {}\r\n\r\nRevert.prototype = {\r\n  startIndex: null,\r\n  dragStart: function dragStart(_ref2) {\r\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\r\n    this.startIndex = oldDraggableIndex;\r\n  },\r\n  onSpill: function onSpill(_ref3) {\r\n    var dragEl = _ref3.dragEl,\r\n        putSortable = _ref3.putSortable;\r\n    this.sortable.captureAnimationState();\r\n\r\n    if (putSortable) {\r\n      putSortable.captureAnimationState();\r\n    }\r\n\r\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\r\n\r\n    if (nextSibling) {\r\n      this.sortable.el.insertBefore(dragEl, nextSibling);\r\n    } else {\r\n      this.sortable.el.appendChild(dragEl);\r\n    }\r\n\r\n    this.sortable.animateAll();\r\n\r\n    if (putSortable) {\r\n      putSortable.animateAll();\r\n    }\r\n  },\r\n  drop: drop\r\n};\r\n\r\n_extends(Revert, {\r\n  pluginName: 'revertOnSpill'\r\n});\r\n\r\nfunction Remove() {}\r\n\r\nRemove.prototype = {\r\n  onSpill: function onSpill(_ref4) {\r\n    var dragEl = _ref4.dragEl,\r\n        putSortable = _ref4.putSortable;\r\n    var parentSortable = putSortable || this.sortable;\r\n    parentSortable.captureAnimationState();\r\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\r\n    parentSortable.animateAll();\r\n  },\r\n  drop: drop\r\n};\r\n\r\n_extends(Remove, {\r\n  pluginName: 'removeOnSpill'\r\n});\r\n\r\nvar lastSwapEl;\r\n\r\nfunction SwapPlugin() {\r\n  function Swap() {\r\n    this.defaults = {\r\n      swapClass: 'sortable-swap-highlight'\r\n    };\r\n  }\r\n\r\n  Swap.prototype = {\r\n    dragStart: function dragStart(_ref) {\r\n      var dragEl = _ref.dragEl;\r\n      lastSwapEl = dragEl;\r\n    },\r\n    dragOverValid: function dragOverValid(_ref2) {\r\n      var completed = _ref2.completed,\r\n          target = _ref2.target,\r\n          onMove = _ref2.onMove,\r\n          activeSortable = _ref2.activeSortable,\r\n          changed = _ref2.changed,\r\n          cancel = _ref2.cancel;\r\n      if (!activeSortable.options.swap) return;\r\n      var el = this.sortable.el,\r\n          options = this.options;\r\n\r\n      if (target && target !== el) {\r\n        var prevSwapEl = lastSwapEl;\r\n\r\n        if (onMove(target) !== false) {\r\n          toggleClass(target, options.swapClass, true);\r\n          lastSwapEl = target;\r\n        } else {\r\n          lastSwapEl = null;\r\n        }\r\n\r\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\r\n          toggleClass(prevSwapEl, options.swapClass, false);\r\n        }\r\n      }\r\n\r\n      changed();\r\n      completed(true);\r\n      cancel();\r\n    },\r\n    drop: function drop(_ref3) {\r\n      var activeSortable = _ref3.activeSortable,\r\n          putSortable = _ref3.putSortable,\r\n          dragEl = _ref3.dragEl;\r\n      var toSortable = putSortable || this.sortable;\r\n      var options = this.options;\r\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\r\n\r\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\r\n        if (dragEl !== lastSwapEl) {\r\n          toSortable.captureAnimationState();\r\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\r\n          swapNodes(dragEl, lastSwapEl);\r\n          toSortable.animateAll();\r\n          if (toSortable !== activeSortable) activeSortable.animateAll();\r\n        }\r\n      }\r\n    },\r\n    nulling: function nulling() {\r\n      lastSwapEl = null;\r\n    }\r\n  };\r\n  return _extends(Swap, {\r\n    pluginName: 'swap',\r\n    eventProperties: function eventProperties() {\r\n      return {\r\n        swapItem: lastSwapEl\r\n      };\r\n    }\r\n  });\r\n}\r\n\r\nfunction swapNodes(n1, n2) {\r\n  var p1 = n1.parentNode,\r\n      p2 = n2.parentNode,\r\n      i1,\r\n      i2;\r\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\r\n  i1 = index(n1);\r\n  i2 = index(n2);\r\n\r\n  if (p1.isEqualNode(p2) && i1 < i2) {\r\n    i2++;\r\n  }\r\n\r\n  p1.insertBefore(n2, p1.children[i1]);\r\n  p2.insertBefore(n1, p2.children[i2]);\r\n}\r\n\r\nvar multiDragElements = [],\r\n    multiDragClones = [],\r\n    lastMultiDragSelect,\r\n    // for selection with modifier key down (SHIFT)\r\nmultiDragSortable,\r\n    initialFolding = false,\r\n    // Initial multi-drag fold when drag started\r\nfolding = false,\r\n    // Folding any other time\r\ndragStarted = false,\r\n    dragEl$1,\r\n    clonesFromRect,\r\n    clonesHidden;\r\n\r\nfunction MultiDragPlugin() {\r\n  function MultiDrag(sortable) {\r\n    // Bind all private methods\r\n    for (var fn in this) {\r\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\r\n        this[fn] = this[fn].bind(this);\r\n      }\r\n    }\r\n\r\n    if (!sortable.options.avoidImplicitDeselect) {\r\n      if (sortable.options.supportPointer) {\r\n        on(document, 'pointerup', this._deselectMultiDrag);\r\n      } else {\r\n        on(document, 'mouseup', this._deselectMultiDrag);\r\n        on(document, 'touchend', this._deselectMultiDrag);\r\n      }\r\n    }\r\n\r\n    on(document, 'keydown', this._checkKeyDown);\r\n    on(document, 'keyup', this._checkKeyUp);\r\n    this.defaults = {\r\n      selectedClass: 'sortable-selected',\r\n      multiDragKey: null,\r\n      avoidImplicitDeselect: false,\r\n      setData: function setData(dataTransfer, dragEl) {\r\n        var data = '';\r\n\r\n        if (multiDragElements.length && multiDragSortable === sortable) {\r\n          multiDragElements.forEach(function (multiDragElement, i) {\r\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\r\n          });\r\n        } else {\r\n          data = dragEl.textContent;\r\n        }\r\n\r\n        dataTransfer.setData('Text', data);\r\n      }\r\n    };\r\n  }\r\n\r\n  MultiDrag.prototype = {\r\n    multiDragKeyDown: false,\r\n    isMultiDrag: false,\r\n    delayStartGlobal: function delayStartGlobal(_ref) {\r\n      var dragged = _ref.dragEl;\r\n      dragEl$1 = dragged;\r\n    },\r\n    delayEnded: function delayEnded() {\r\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\r\n    },\r\n    setupClone: function setupClone(_ref2) {\r\n      var sortable = _ref2.sortable,\r\n          cancel = _ref2.cancel;\r\n      if (!this.isMultiDrag) return;\r\n\r\n      for (var i = 0; i < multiDragElements.length; i++) {\r\n        multiDragClones.push(clone(multiDragElements[i]));\r\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\r\n        multiDragClones[i].draggable = false;\r\n        multiDragClones[i].style['will-change'] = '';\r\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\r\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\r\n      }\r\n\r\n      sortable._hideClone();\r\n\r\n      cancel();\r\n    },\r\n    clone: function clone(_ref3) {\r\n      var sortable = _ref3.sortable,\r\n          rootEl = _ref3.rootEl,\r\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\r\n          cancel = _ref3.cancel;\r\n      if (!this.isMultiDrag) return;\r\n\r\n      if (!this.options.removeCloneOnHide) {\r\n        if (multiDragElements.length && multiDragSortable === sortable) {\r\n          insertMultiDragClones(true, rootEl);\r\n          dispatchSortableEvent('clone');\r\n          cancel();\r\n        }\r\n      }\r\n    },\r\n    showClone: function showClone(_ref4) {\r\n      var cloneNowShown = _ref4.cloneNowShown,\r\n          rootEl = _ref4.rootEl,\r\n          cancel = _ref4.cancel;\r\n      if (!this.isMultiDrag) return;\r\n      insertMultiDragClones(false, rootEl);\r\n      multiDragClones.forEach(function (clone) {\r\n        css(clone, 'display', '');\r\n      });\r\n      cloneNowShown();\r\n      clonesHidden = false;\r\n      cancel();\r\n    },\r\n    hideClone: function hideClone(_ref5) {\r\n      var _this = this;\r\n\r\n      var sortable = _ref5.sortable,\r\n          cloneNowHidden = _ref5.cloneNowHidden,\r\n          cancel = _ref5.cancel;\r\n      if (!this.isMultiDrag) return;\r\n      multiDragClones.forEach(function (clone) {\r\n        css(clone, 'display', 'none');\r\n\r\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\r\n          clone.parentNode.removeChild(clone);\r\n        }\r\n      });\r\n      cloneNowHidden();\r\n      clonesHidden = true;\r\n      cancel();\r\n    },\r\n    dragStartGlobal: function dragStartGlobal(_ref6) {\r\n      var sortable = _ref6.sortable;\r\n\r\n      if (!this.isMultiDrag && multiDragSortable) {\r\n        multiDragSortable.multiDrag._deselectMultiDrag();\r\n      }\r\n\r\n      multiDragElements.forEach(function (multiDragElement) {\r\n        multiDragElement.sortableIndex = index(multiDragElement);\r\n      }); // Sort multi-drag elements\r\n\r\n      multiDragElements = multiDragElements.sort(function (a, b) {\r\n        return a.sortableIndex - b.sortableIndex;\r\n      });\r\n      dragStarted = true;\r\n    },\r\n    dragStarted: function dragStarted(_ref7) {\r\n      var _this2 = this;\r\n\r\n      var sortable = _ref7.sortable;\r\n      if (!this.isMultiDrag) return;\r\n\r\n      if (this.options.sort) {\r\n        // Capture rects,\r\n        // hide multi drag elements (by positioning them absolute),\r\n        // set multi drag elements rects to dragRect,\r\n        // show multi drag elements,\r\n        // animate to rects,\r\n        // unset rects & remove from DOM\r\n        sortable.captureAnimationState();\r\n\r\n        if (this.options.animation) {\r\n          multiDragElements.forEach(function (multiDragElement) {\r\n            if (multiDragElement === dragEl$1) return;\r\n            css(multiDragElement, 'position', 'absolute');\r\n          });\r\n          var dragRect = getRect(dragEl$1, false, true, true);\r\n          multiDragElements.forEach(function (multiDragElement) {\r\n            if (multiDragElement === dragEl$1) return;\r\n            setRect(multiDragElement, dragRect);\r\n          });\r\n          folding = true;\r\n          initialFolding = true;\r\n        }\r\n      }\r\n\r\n      sortable.animateAll(function () {\r\n        folding = false;\r\n        initialFolding = false;\r\n\r\n        if (_this2.options.animation) {\r\n          multiDragElements.forEach(function (multiDragElement) {\r\n            unsetRect(multiDragElement);\r\n          });\r\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\r\n\r\n\r\n        if (_this2.options.sort) {\r\n          removeMultiDragElements();\r\n        }\r\n      });\r\n    },\r\n    dragOver: function dragOver(_ref8) {\r\n      var target = _ref8.target,\r\n          completed = _ref8.completed,\r\n          cancel = _ref8.cancel;\r\n\r\n      if (folding && ~multiDragElements.indexOf(target)) {\r\n        completed(false);\r\n        cancel();\r\n      }\r\n    },\r\n    revert: function revert(_ref9) {\r\n      var fromSortable = _ref9.fromSortable,\r\n          rootEl = _ref9.rootEl,\r\n          sortable = _ref9.sortable,\r\n          dragRect = _ref9.dragRect;\r\n\r\n      if (multiDragElements.length > 1) {\r\n        // Setup unfold animation\r\n        multiDragElements.forEach(function (multiDragElement) {\r\n          sortable.addAnimationState({\r\n            target: multiDragElement,\r\n            rect: folding ? getRect(multiDragElement) : dragRect\r\n          });\r\n          unsetRect(multiDragElement);\r\n          multiDragElement.fromRect = dragRect;\r\n          fromSortable.removeAnimationState(multiDragElement);\r\n        });\r\n        folding = false;\r\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\r\n      }\r\n    },\r\n    dragOverCompleted: function dragOverCompleted(_ref10) {\r\n      var sortable = _ref10.sortable,\r\n          isOwner = _ref10.isOwner,\r\n          insertion = _ref10.insertion,\r\n          activeSortable = _ref10.activeSortable,\r\n          parentEl = _ref10.parentEl,\r\n          putSortable = _ref10.putSortable;\r\n      var options = this.options;\r\n\r\n      if (insertion) {\r\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\r\n        if (isOwner) {\r\n          activeSortable._hideClone();\r\n        }\r\n\r\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\r\n\r\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\r\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\r\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\r\n          multiDragElements.forEach(function (multiDragElement) {\r\n            if (multiDragElement === dragEl$1) return;\r\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\r\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\r\n\r\n            parentEl.appendChild(multiDragElement);\r\n          });\r\n          folding = true;\r\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\r\n\r\n\r\n        if (!isOwner) {\r\n          // Only remove if not folding (folding will remove them anyways)\r\n          if (!folding) {\r\n            removeMultiDragElements();\r\n          }\r\n\r\n          if (multiDragElements.length > 1) {\r\n            var clonesHiddenBefore = clonesHidden;\r\n\r\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\r\n\r\n\r\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\r\n              multiDragClones.forEach(function (clone) {\r\n                activeSortable.addAnimationState({\r\n                  target: clone,\r\n                  rect: clonesFromRect\r\n                });\r\n                clone.fromRect = clonesFromRect;\r\n                clone.thisAnimationDuration = null;\r\n              });\r\n            }\r\n          } else {\r\n            activeSortable._showClone(sortable);\r\n          }\r\n        }\r\n      }\r\n    },\r\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\r\n      var dragRect = _ref11.dragRect,\r\n          isOwner = _ref11.isOwner,\r\n          activeSortable = _ref11.activeSortable;\r\n      multiDragElements.forEach(function (multiDragElement) {\r\n        multiDragElement.thisAnimationDuration = null;\r\n      });\r\n\r\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\r\n        clonesFromRect = _extends({}, dragRect);\r\n        var dragMatrix = matrix(dragEl$1, true);\r\n        clonesFromRect.top -= dragMatrix.f;\r\n        clonesFromRect.left -= dragMatrix.e;\r\n      }\r\n    },\r\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\r\n      if (folding) {\r\n        folding = false;\r\n        removeMultiDragElements();\r\n      }\r\n    },\r\n    drop: function drop(_ref12) {\r\n      var evt = _ref12.originalEvent,\r\n          rootEl = _ref12.rootEl,\r\n          parentEl = _ref12.parentEl,\r\n          sortable = _ref12.sortable,\r\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\r\n          oldIndex = _ref12.oldIndex,\r\n          putSortable = _ref12.putSortable;\r\n      var toSortable = putSortable || this.sortable;\r\n      if (!evt) return;\r\n      var options = this.options,\r\n          children = parentEl.children; // Multi-drag selection\r\n\r\n      if (!dragStarted) {\r\n        if (options.multiDragKey && !this.multiDragKeyDown) {\r\n          this._deselectMultiDrag();\r\n        }\r\n\r\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\r\n\r\n        if (!~multiDragElements.indexOf(dragEl$1)) {\r\n          multiDragElements.push(dragEl$1);\r\n          dispatchEvent({\r\n            sortable: sortable,\r\n            rootEl: rootEl,\r\n            name: 'select',\r\n            targetEl: dragEl$1,\r\n            originalEvent: evt\r\n          }); // Modifier activated, select from last to dragEl\r\n\r\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\r\n            var lastIndex = index(lastMultiDragSelect),\r\n                currentIndex = index(dragEl$1);\r\n\r\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\r\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\r\n              // (but previous selection existed)\r\n              var n, i;\r\n\r\n              if (currentIndex > lastIndex) {\r\n                i = lastIndex;\r\n                n = currentIndex;\r\n              } else {\r\n                i = currentIndex;\r\n                n = lastIndex + 1;\r\n              }\r\n\r\n              for (; i < n; i++) {\r\n                if (~multiDragElements.indexOf(children[i])) continue;\r\n                toggleClass(children[i], options.selectedClass, true);\r\n                multiDragElements.push(children[i]);\r\n                dispatchEvent({\r\n                  sortable: sortable,\r\n                  rootEl: rootEl,\r\n                  name: 'select',\r\n                  targetEl: children[i],\r\n                  originalEvent: evt\r\n                });\r\n              }\r\n            }\r\n          } else {\r\n            lastMultiDragSelect = dragEl$1;\r\n          }\r\n\r\n          multiDragSortable = toSortable;\r\n        } else {\r\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\r\n          lastMultiDragSelect = null;\r\n          dispatchEvent({\r\n            sortable: sortable,\r\n            rootEl: rootEl,\r\n            name: 'deselect',\r\n            targetEl: dragEl$1,\r\n            originalEvent: evt\r\n          });\r\n        }\r\n      } // Multi-drag drop\r\n\r\n\r\n      if (dragStarted && this.isMultiDrag) {\r\n        folding = false; // Do not \"unfold\" after around dragEl if reverted\r\n\r\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\r\n          var dragRect = getRect(dragEl$1),\r\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\r\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\r\n          toSortable.captureAnimationState();\r\n\r\n          if (!initialFolding) {\r\n            if (options.animation) {\r\n              dragEl$1.fromRect = dragRect;\r\n              multiDragElements.forEach(function (multiDragElement) {\r\n                multiDragElement.thisAnimationDuration = null;\r\n\r\n                if (multiDragElement !== dragEl$1) {\r\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\r\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\r\n\r\n                  toSortable.addAnimationState({\r\n                    target: multiDragElement,\r\n                    rect: rect\r\n                  });\r\n                }\r\n              });\r\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\r\n            // properly they must all be removed\r\n\r\n\r\n            removeMultiDragElements();\r\n            multiDragElements.forEach(function (multiDragElement) {\r\n              if (children[multiDragIndex]) {\r\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\r\n              } else {\r\n                parentEl.appendChild(multiDragElement);\r\n              }\r\n\r\n              multiDragIndex++;\r\n            }); // If initial folding is done, the elements may have changed position because they are now\r\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\r\n            // must be fired here as Sortable will not.\r\n\r\n            if (oldIndex === index(dragEl$1)) {\r\n              var update = false;\r\n              multiDragElements.forEach(function (multiDragElement) {\r\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\r\n                  update = true;\r\n                  return;\r\n                }\r\n              });\r\n\r\n              if (update) {\r\n                dispatchSortableEvent('update');\r\n              }\r\n            }\r\n          } // Must be done after capturing individual rects (scroll bar)\r\n\r\n\r\n          multiDragElements.forEach(function (multiDragElement) {\r\n            unsetRect(multiDragElement);\r\n          });\r\n          toSortable.animateAll();\r\n        }\r\n\r\n        multiDragSortable = toSortable;\r\n      } // Remove clones if necessary\r\n\r\n\r\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\r\n        multiDragClones.forEach(function (clone) {\r\n          clone.parentNode && clone.parentNode.removeChild(clone);\r\n        });\r\n      }\r\n    },\r\n    nullingGlobal: function nullingGlobal() {\r\n      this.isMultiDrag = dragStarted = false;\r\n      multiDragClones.length = 0;\r\n    },\r\n    destroyGlobal: function destroyGlobal() {\r\n      this._deselectMultiDrag();\r\n\r\n      off(document, 'pointerup', this._deselectMultiDrag);\r\n      off(document, 'mouseup', this._deselectMultiDrag);\r\n      off(document, 'touchend', this._deselectMultiDrag);\r\n      off(document, 'keydown', this._checkKeyDown);\r\n      off(document, 'keyup', this._checkKeyUp);\r\n    },\r\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\r\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\r\n\r\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\r\n\r\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\r\n\r\n      if (evt && evt.button !== 0) return;\r\n\r\n      while (multiDragElements.length) {\r\n        var el = multiDragElements[0];\r\n        toggleClass(el, this.options.selectedClass, false);\r\n        multiDragElements.shift();\r\n        dispatchEvent({\r\n          sortable: this.sortable,\r\n          rootEl: this.sortable.el,\r\n          name: 'deselect',\r\n          targetEl: el,\r\n          originalEvent: evt\r\n        });\r\n      }\r\n    },\r\n    _checkKeyDown: function _checkKeyDown(evt) {\r\n      if (evt.key === this.options.multiDragKey) {\r\n        this.multiDragKeyDown = true;\r\n      }\r\n    },\r\n    _checkKeyUp: function _checkKeyUp(evt) {\r\n      if (evt.key === this.options.multiDragKey) {\r\n        this.multiDragKeyDown = false;\r\n      }\r\n    }\r\n  };\r\n  return _extends(MultiDrag, {\r\n    // Static methods & properties\r\n    pluginName: 'multiDrag',\r\n    utils: {\r\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\r\n      select: function select(el) {\r\n        var sortable = el.parentNode[expando];\r\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\r\n\r\n        if (multiDragSortable && multiDragSortable !== sortable) {\r\n          multiDragSortable.multiDrag._deselectMultiDrag();\r\n\r\n          multiDragSortable = sortable;\r\n        }\r\n\r\n        toggleClass(el, sortable.options.selectedClass, true);\r\n        multiDragElements.push(el);\r\n      },\r\n\r\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\r\n      deselect: function deselect(el) {\r\n        var sortable = el.parentNode[expando],\r\n            index = multiDragElements.indexOf(el);\r\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\r\n        toggleClass(el, sortable.options.selectedClass, false);\r\n        multiDragElements.splice(index, 1);\r\n      }\r\n    },\r\n    eventProperties: function eventProperties() {\r\n      var _this3 = this;\r\n\r\n      var oldIndicies = [],\r\n          newIndicies = [];\r\n      multiDragElements.forEach(function (multiDragElement) {\r\n        oldIndicies.push({\r\n          multiDragElement: multiDragElement,\r\n          index: multiDragElement.sortableIndex\r\n        }); // multiDragElements will already be sorted if folding\r\n\r\n        var newIndex;\r\n\r\n        if (folding && multiDragElement !== dragEl$1) {\r\n          newIndex = -1;\r\n        } else if (folding) {\r\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\r\n        } else {\r\n          newIndex = index(multiDragElement);\r\n        }\r\n\r\n        newIndicies.push({\r\n          multiDragElement: multiDragElement,\r\n          index: newIndex\r\n        });\r\n      });\r\n      return {\r\n        items: _toConsumableArray(multiDragElements),\r\n        clones: [].concat(multiDragClones),\r\n        oldIndicies: oldIndicies,\r\n        newIndicies: newIndicies\r\n      };\r\n    },\r\n    optionListeners: {\r\n      multiDragKey: function multiDragKey(key) {\r\n        key = key.toLowerCase();\r\n\r\n        if (key === 'ctrl') {\r\n          key = 'Control';\r\n        } else if (key.length > 1) {\r\n          key = key.charAt(0).toUpperCase() + key.substr(1);\r\n        }\r\n\r\n        return key;\r\n      }\r\n    }\r\n  });\r\n}\r\n\r\nfunction insertMultiDragElements(clonesInserted, rootEl) {\r\n  multiDragElements.forEach(function (multiDragElement, i) {\r\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\r\n\r\n    if (target) {\r\n      rootEl.insertBefore(multiDragElement, target);\r\n    } else {\r\n      rootEl.appendChild(multiDragElement);\r\n    }\r\n  });\r\n}\r\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\r\n\r\n\r\nfunction insertMultiDragClones(elementsInserted, rootEl) {\r\n  multiDragClones.forEach(function (clone, i) {\r\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\r\n\r\n    if (target) {\r\n      rootEl.insertBefore(clone, target);\r\n    } else {\r\n      rootEl.appendChild(clone);\r\n    }\r\n  });\r\n}\r\n\r\nfunction removeMultiDragElements() {\r\n  multiDragElements.forEach(function (multiDragElement) {\r\n    if (multiDragElement === dragEl$1) return;\r\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\r\n  });\r\n}\r\n\r\nSortable.mount(new AutoScrollPlugin());\r\nSortable.mount(Remove, Revert);\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = (Sortable);\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/sortablejs/modular/sortable.esm.js\n"));

/***/ }),

/***/ "./node_modules/tiny-invariant/dist/tiny-invariant.esm.js":
/*!****************************************************************!*\
  !*** ./node_modules/tiny-invariant/dist/tiny-invariant.esm.js ***!
  \****************************************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ invariant; }\n/* harmony export */ });\nvar isProduction = \"development\" === 'production';\r\nvar prefix = 'Invariant failed';\r\nfunction invariant(condition, message) {\r\n    if (condition) {\r\n        return;\r\n    }\r\n    if (isProduction) {\r\n        throw new Error(prefix);\r\n    }\r\n    var provided = typeof message === 'function' ? message() : message;\r\n    var value = provided ? prefix + \": \" + provided : prefix;\r\n    throw new Error(value);\r\n}\r\n\r\n\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG1CQUFtQixhQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNnQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvdGlueS1pbnZhcmlhbnQvZGlzdC90aW55LWludmFyaWFudC5lc20uanM/NWUwZiJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgaXNQcm9kdWN0aW9uID0gcHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJztcclxudmFyIHByZWZpeCA9ICdJbnZhcmlhbnQgZmFpbGVkJztcclxuZnVuY3Rpb24gaW52YXJpYW50KGNvbmRpdGlvbiwgbWVzc2FnZSkge1xyXG4gICAgaWYgKGNvbmRpdGlvbikge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGlmIChpc1Byb2R1Y3Rpb24pIHtcclxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IocHJlZml4KTtcclxuICAgIH1cclxuICAgIHZhciBwcm92aWRlZCA9IHR5cGVvZiBtZXNzYWdlID09PSAnZnVuY3Rpb24nID8gbWVzc2FnZSgpIDogbWVzc2FnZTtcclxuICAgIHZhciB2YWx1ZSA9IHByb3ZpZGVkID8gcHJlZml4ICsgXCI6IFwiICsgcHJvdmlkZWQgOiBwcmVmaXg7XHJcbiAgICB0aHJvdyBuZXcgRXJyb3IodmFsdWUpO1xyXG59XHJcblxyXG5leHBvcnQgeyBpbnZhcmlhbnQgYXMgZGVmYXVsdCB9O1xyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/tiny-invariant/dist/tiny-invariant.esm.js\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_array_like_to_array.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_array_like_to_array.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayLikeToArray; }\n/* harmony export */ });\nfunction _arrayLikeToArray(arr, len) {\r\n  if (len == null || len > arr.length) len = arr.length;\r\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\r\n  return arr2;\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fYXJyYXlfbGlrZV90b19hcnJheS5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSx5Q0FBeUMsU0FBUztBQUNsRDtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvc3JjL19hcnJheV9saWtlX3RvX2FycmF5Lm1qcz85NWQ4Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheUxpa2VUb0FycmF5KGFyciwgbGVuKSB7XHJcbiAgaWYgKGxlbiA9PSBudWxsIHx8IGxlbiA+IGFyci5sZW5ndGgpIGxlbiA9IGFyci5sZW5ndGg7XHJcbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xyXG4gIHJldHVybiBhcnIyO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_array_like_to_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_array_without_holes.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_array_without_holes.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _arrayWithoutHoles; }\n/* harmony export */ });\n/* harmony import */ var _array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_like_to_array.mjs */ \"./node_modules/@swc/helpers/src/_array_like_to_array.mjs\");\n\r\n\r\nfunction _arrayWithoutHoles(arr) {\r\n  if (Array.isArray(arr)) return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fYXJyYXlfd2l0aG91dF9ob2xlcy5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBMkQ7QUFDM0Q7QUFDZTtBQUNmLGlDQUFpQyxvRUFBaUI7QUFDbEQiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX2FycmF5X3dpdGhvdXRfaG9sZXMubWpzP2U2YmIiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9hcnJheUxpa2VUb0FycmF5IGZyb20gJy4vX2FycmF5X2xpa2VfdG9fYXJyYXkubWpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcclxuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSByZXR1cm4gX2FycmF5TGlrZVRvQXJyYXkoYXJyKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_array_without_holes.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_iterable_to_array.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_iterable_to_array.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _iterableToArray; }\n/* harmony export */ });\nfunction _iterableToArray(iter) {\r\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9faXRlcmFibGVfdG9fYXJyYXkubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7QUFBZTtBQUNmO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0Bzd2MvaGVscGVycy9zcmMvX2l0ZXJhYmxlX3RvX2FycmF5Lm1qcz9jMTIxIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXkoaXRlcikge1xyXG4gIGlmICh0eXBlb2YgU3ltYm9sICE9PSBcInVuZGVmaW5lZFwiICYmIGl0ZXJbU3ltYm9sLml0ZXJhdG9yXSAhPSBudWxsIHx8IGl0ZXJbXCJAQGl0ZXJhdG9yXCJdICE9IG51bGwpIHJldHVybiBBcnJheS5mcm9tKGl0ZXIpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_iterable_to_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_non_iterable_spread.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_non_iterable_spread.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _nonIterableSpread; }\n/* harmony export */ });\nfunction _nonIterableSpread() {\r\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fbm9uX2l0ZXJhYmxlX3NwcmVhZC5tanMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlO0FBQ2Y7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fbm9uX2l0ZXJhYmxlX3NwcmVhZC5tanM/MWJlOSJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfbm9uSXRlcmFibGVTcHJlYWQoKSB7XHJcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcXFxuSW4gb3JkZXIgdG8gYmUgaXRlcmFibGUsIG5vbi1hcnJheSBvYmplY3RzIG11c3QgaGF2ZSBhIFtTeW1ib2wuaXRlcmF0b3JdKCkgbWV0aG9kLlwiKTtcclxufVxyXG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_non_iterable_spread.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_to_consumable_array.mjs":
/*!****************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_to_consumable_array.mjs ***!
  \****************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _toConsumableArray; }\n/* harmony export */ });\n/* harmony import */ var _array_without_holes_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_without_holes.mjs */ \"./node_modules/@swc/helpers/src/_array_without_holes.mjs\");\n/* harmony import */ var _iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./_iterable_to_array.mjs */ \"./node_modules/@swc/helpers/src/_iterable_to_array.mjs\");\n/* harmony import */ var _non_iterable_spread_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./_non_iterable_spread.mjs */ \"./node_modules/@swc/helpers/src/_non_iterable_spread.mjs\");\n/* harmony import */ var _unsupported_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./_unsupported_iterable_to_array.mjs */ \"./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs\");\n\r\n\r\n\r\n\r\n\r\nfunction _toConsumableArray(arr) {\r\n  return (0,_array_without_holes_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(arr) || (0,_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(arr) || (0,_unsupported_iterable_to_array_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(arr) || (0,_non_iterable_spread_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdG9fY29uc3VtYWJsZV9hcnJheS5tanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBMkQ7QUFDSjtBQUNJO0FBQ21CO0FBQzlFO0FBQ2U7QUFDZixTQUFTLG9FQUFpQixTQUFTLGtFQUFlLFNBQVMsOEVBQTBCLFNBQVMsb0VBQWlCO0FBQy9HIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3djL2hlbHBlcnMvc3JjL190b19jb25zdW1hYmxlX2FycmF5Lm1qcz84YjhmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBhcnJheVdpdGhvdXRIb2xlcyBmcm9tICcuL19hcnJheV93aXRob3V0X2hvbGVzLm1qcyc7XHJcbmltcG9ydCBpdGVyYWJsZVRvQXJyYXkgZnJvbSAnLi9faXRlcmFibGVfdG9fYXJyYXkubWpzJztcclxuaW1wb3J0IG5vbkl0ZXJhYmxlU3ByZWFkIGZyb20gJy4vX25vbl9pdGVyYWJsZV9zcHJlYWQubWpzJztcclxuaW1wb3J0IHVuc3VwcG9ydGVkSXRlcmFibGVUb0FycmF5IGZyb20gJy4vX3Vuc3VwcG9ydGVkX2l0ZXJhYmxlX3RvX2FycmF5Lm1qcyc7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBfdG9Db25zdW1hYmxlQXJyYXkoYXJyKSB7XHJcbiAgcmV0dXJuIGFycmF5V2l0aG91dEhvbGVzKGFycikgfHwgaXRlcmFibGVUb0FycmF5KGFycikgfHwgdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBub25JdGVyYWJsZVNwcmVhZCgpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_to_consumable_array.mjs\n"));

/***/ }),

/***/ "./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs ***!
  \**************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ _unsupportedIterableToArray; }\n/* harmony export */ });\n/* harmony import */ var _array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_array_like_to_array.mjs */ \"./node_modules/@swc/helpers/src/_array_like_to_array.mjs\");\n\r\n\r\nfunction _unsupportedIterableToArray(o, minLen) {\r\n  if (!o) return;\r\n  if (typeof o === \"string\") return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\r\n  var n = Object.prototype.toString.call(o).slice(8, -1);\r\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\r\n  if (n === \"Map\" || n === \"Set\") return Array.from(n);\r\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))\r\n    return (0,_array_like_to_array_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(o, minLen);\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkubWpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQTJEO0FBQzNEO0FBQ2U7QUFDZjtBQUNBLG9DQUFvQyxvRUFBaUI7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFpQjtBQUM1QiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN3Yy9oZWxwZXJzL3NyYy9fdW5zdXBwb3J0ZWRfaXRlcmFibGVfdG9fYXJyYXkubWpzPzMyNzkiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IF9hcnJheUxpa2VUb0FycmF5IGZyb20gJy4vX2FycmF5X2xpa2VfdG9fYXJyYXkubWpzJztcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShvLCBtaW5MZW4pIHtcclxuICBpZiAoIW8pIHJldHVybjtcclxuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xyXG4gIHZhciBuID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKG8pLnNsaWNlKDgsIC0xKTtcclxuICBpZiAobiA9PT0gXCJPYmplY3RcIiAmJiBvLmNvbnN0cnVjdG9yKSBuID0gby5jb25zdHJ1Y3Rvci5uYW1lO1xyXG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG4pO1xyXG4gIGlmIChuID09PSBcIkFyZ3VtZW50c1wiIHx8IC9eKD86VWl8SSludCg/Ojh8MTZ8MzIpKD86Q2xhbXBlZCk/QXJyYXkkLy50ZXN0KG4pKVxyXG4gICAgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XHJcbn1cclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./node_modules/@swc/helpers/src/_unsupported_iterable_to_array.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["pages/_app","main"], function() { return __webpack_exec__("./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?absolutePagePath=D%3A%5Ccanabis%5CTodo%5Cclient%5Cpages%5Cindex.js&page=%2F!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);